{"version":3,"sources":["async-fsm.min.js"],"names":["root","factory","define","amd","exports","module","require","Promise","_","uuidv4","FSM","this","_eachEntity","state","callback","i","j","l","m","region","_regions","length","_transits","_states","_findState","targetState","sublevel","subRegion","result","isUndefined","Infinity","_findDeepHistoryPseudoState","container","hasHistory","_historyPseudo","_getUpperContainer","isNull","_findFirstTransition","from","transits","_initialPseudo","find","transit","_source","_findNextTransition","to","ExitPointPseudoState","_locked","_target","logger","isFalsy","mixin","Model","Subject","Entity","Elem","ProtoState","State","Machine","FinalState","SubMachine","PseudoState","InitialPseudoState","HistoryPseudoState","TerminatePseudoState","ChoicePseudoState","ConnectionPointPseudoState","EntryPointPseudoState","Transition","Region","config","debuggable","logLevel","logLevelData","debug","message","indexOf","console","log","info","warn","error","Error","negate","Boolean","accessor","get","key","model","set","value","unset","extend","data","save","restore","clear","helper","$get","superState","_getSuperState","$set","$unset","$extend","$save","$restore","$clear","disable","_cname","$props","$methods","addState","removeState","addTransition","transition","removeTransition","appendRegion","removeRegion","descriptor","enumerable","props","methods","manipulator","states","toArray","arguments","_name","apply","_parent","push","_addObserver","_update","index","splice","_removeObserver","currentLevel","_final","_id","_container","_getParentLevel","_getRoot","_updateRelation","first","_rawSource","_exitViaExitPoint","_rawTarget","_isExplicitEntry","subMachine","addLink","machine","_link","removeLink","_data","_cache","isObject","_extendDeep","prototype","create","Object","constructor","destination","source","each","bind","isFunction","isArray","_observers","_countObservers","type","_setObserverType","types","observer","observers","_notify","args","slice","name","call","_type","_status","getId","getName","setName","isActive","addMethod","object","self","bindObject","mapObject","method","_activate","_inactivate","noop","_root","_level","defineProperties","getContainer","getCurrentLevel","_async","resolve","getRegion","isNumber","completion","_exit","event","_entry","options","defaults","clone","_entryAction","entryAction","_exitAction","exitAction","_doActivity","doActivity","_autoTransition","autoTransition","_loop","loop","_fps","fps","_interval","_timerId","_lastCallTime","trigger","_setTimer","_repeat","_clearTimer","clearTimeout","currentTime","processingTime","timeToCall","now","Math","max","setTimeout","_timeout","previousTime","deltaTime","history","priority","_deployed","_promise","deploy","entity","undeploy","start","_stackPromise","undefined","finish","then","catch","_onRejected","_aborted","_outerExecution","_linkBack","e","reject","_isMediator","_linkForward","isEmpty","_key","_innerExecution","id","exitPoint","findWhere","deep","_isDeep","condition","_condition","target","setKey","upperContainer","_guard","guard","_effect","effect","_internal","internal","locked","_previousState","_setDefaultStates","getIndex","_completion","_setPreviousState","initialPseudo","final","_setDefaultStateName","every"],"mappings":"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","file":"async-fsm.min.js","sourcesContent":["/* Async-FSM.js\r\n * version 0.3.1\r\n * \r\n * Copyright (c) 2017 Masa (http://wiz-code.digick.jp)\r\n * LICENSE: MIT license\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(['bluebird', 'underscore', 'uuid/v4'], factory);\r\n\r\n    } else if (typeof exports !== 'undefined') {\r\n        if (typeof module !== 'undefined' && module.exports) {\r\n            exports = module.exports = factory(\r\n                require('bluebird'),\r\n                require('underscore'),\r\n                require('uuid/v4')\r\n            );\r\n        }\r\n    } else {\r\n        if (typeof require === 'function') {\r\n            root.Promise = require('bluebird');\r\n            root._ = require('underscore');\r\n            root.uuidv4 = require('uuid/v4');\r\n        }\r\n\r\n        root.FSM = factory(\r\n            root.Promise,\r\n            root._,\r\n            root.uuidv4\r\n        );\r\n    }\r\n}(this, function (Promise, _, uuidv4) {\r\n    'use strict';\r\n    \r\n    var logger, isFalsy, mixin, FSM, Model, Subject, Entity, Elem, ProtoState, State, Machine, FinalState, SubMachine, PseudoState, InitialPseudoState, HistoryPseudoState, TerminatePseudoState, ChoicePseudoState, ConnectionPointPseudoState, EntryPointPseudoState, ExitPointPseudoState, Transition, Region;\r\n\r\n    FSM = {\r\n        config: {\r\n            debuggable: true,\r\n        },\r\n    };\r\n\r\n    logger = {\r\n        logLevel: 'DEBUG',\r\n        logLevelData: [\r\n            'DEBUG',\r\n            'INFO',\r\n            'WARN',\r\n            'ERROR',\r\n        ],\r\n\r\n        debug: function (message) {\r\n            if (FSM.config.debuggable && _.indexOf(this.logLevelData, this.logLevel) <= 0) {\r\n                console.log('DEBUG: ', message);\r\n            }\r\n        },\r\n\r\n        info: function (message) {\r\n            if (FSM.config.debuggable && _.indexOf(this.logLevelData, this.logLevel) <= 1) {\r\n                console.log('INFO: ', message);\r\n            }\r\n        },\r\n\r\n        warn: function (message) {\r\n            if (FSM.config.debuggable && _.indexOf(this.logLevelData, this.logLevel) <= 2) {\r\n                console.log('WARN: ', message);\r\n            }\r\n        },\r\n\r\n        error: function (message) {\r\n            if (FSM.config.debuggable && _.indexOf(this.logLevelData, this.logLevel) <= 3) {\r\n                console.error('ERROR: ', message);\r\n                throw new Error('ERROR: ' + message);\r\n            }\r\n        },\r\n    };\r\n\r\n    isFalsy = _.negate(Boolean);\r\n\r\n    mixin = {\r\n        accessor: {\r\n            get: function (key) {\r\n                return this.model.get(key);\r\n            },\r\n\r\n            set: function (key, value) {\r\n                return this.model.set(key, value);\r\n            },\r\n\r\n            unset: function (key) {\r\n                return this.model.unset(key);\r\n            },\r\n\r\n            extend: function (data) {\r\n                return this.model.extend(data);\r\n            },\r\n\r\n            save: function () {\r\n                this.model.save();\r\n            },\r\n\r\n            restore: function () {\r\n                this.model.restore();\r\n            },\r\n\r\n            clear: function () {\r\n                this.model.clear();\r\n            },\r\n        },\r\n\r\n        helper: {\r\n            $get: function (key) {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    return superState.model.get(key);\r\n                }\r\n            },\r\n\r\n            $set: function (key, value) {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    return superState.model.set(key, value);\r\n                }\r\n            },\r\n\r\n            $unset: function (key) {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    return superState.model.unset(key);\r\n                }\r\n            },\r\n\r\n            $extend: function (data) {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    return superState.model.extend(data);\r\n                }\r\n            },\r\n\r\n            $save: function () {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    superState.model.save();\r\n\r\n                } else {\r\n                    return false;\r\n                }\r\n            },\r\n\r\n            $restore: function () {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    superState.model.restore();\r\n\r\n                } else {\r\n                    return false;\r\n                }\r\n            },\r\n\r\n            $clear: function () {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    superState.model.clear();\r\n\r\n                } else {\r\n                    return false;\r\n                }\r\n            },\r\n        },\r\n\r\n        disable: {\r\n            get: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            set: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            unset: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            extend: function (data) {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            save: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            restore: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            clear: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $props: null,\r\n\r\n            $methods: null,\r\n\r\n            $get: function (key) {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $set: function (key, value) {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $unset: function (key) {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $extend: function (data) {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $save: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $restore: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $clear: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            addState: function () {\r\n                logger.error(this._cname + 'インスタンスはサブ状態を持てません。');\r\n            },\r\n\r\n            removeState: function () {\r\n                logger.error(this._cname + 'インスタンスはサブ状態を持てません。');\r\n            },\r\n\r\n            addTransition: function (transition) {\r\n                logger.error(this._cname + 'インスタンスは遷移を持てません。');\r\n            },\r\n\r\n            removeTransition: function (transition) {\r\n                logger.error(this._cname + 'インスタンスは遷移を持てません。');\r\n            },\r\n\r\n            appendRegion: function (region) {\r\n                logger.error(this._cname + 'インスタンスは領域を持てません。');\r\n            },\r\n\r\n            removeRegion: function (region) {\r\n                logger.error(this._cname + 'インスタンスは領域を持てません。');\r\n            },\r\n        },\r\n\r\n        descriptor: {\r\n            $props: {\r\n                enumerable: true,\r\n                get: function () {\r\n                    var superState = this._getSuperState();\r\n                    if (!_.isNull(superState)) {\r\n                        return superState.props;\r\n                    }\r\n                },\r\n            },\r\n\r\n            $methods: {\r\n                enumerable: true,\r\n                get: function () {\r\n                    var superState = this._getSuperState();\r\n                    if (!_.isNull(superState)) {\r\n                        return superState.methods;\r\n                    }\r\n                },\r\n            },\r\n        },\r\n\r\n        manipulator: {\r\n            state: {\r\n                addState: function () {\r\n                    var states = _.toArray(arguments);\r\n                    if (_.isNull(this.region)) {\r\n                        this.appendRegion();\r\n                        logger.info(this._cname + 'インスタンス\"' + this._name + '\"のRegionインスタンスが自動生成されました。');\r\n                    }\r\n\r\n                    return this.region.addState.apply(this.region, states);\r\n                },\r\n\r\n                removeState: function () {\r\n                    var states = _.toArray(arguments);\r\n                    if (_.isNull(this.region)) {\r\n                        logger.error('コンテナのRegionインスタンスが存在しません。');\r\n                    }\r\n\r\n                    return this.region.removeState.apply(this.region, states);\r\n                },\r\n\r\n                addTransition: function () {\r\n                    var transits = _.toArray(arguments);\r\n                    if (_.isNull(this.region)) {\r\n                        this.appendRegion();\r\n                        logger.info(this._cname + 'インスタンス\"' + this._name + '\"のRegionインスタンスが自動作成されました。');\r\n                    }\r\n\r\n                    return this.region.addTransition.apply(this.region, transits);\r\n                },\r\n\r\n                removeTransition: function () {\r\n                    var transits = _.toArray(arguments);\r\n                    if (_.isNull(this.region)) {\r\n                        logger.error('コンテナのRegionインスタンスが存在しません。');\r\n                    }\r\n\r\n                    return this.region.removeTransition.apply(this.region, transits);\r\n                },\r\n\r\n                appendRegion: function (region) {\r\n                    if (_.isNull(this.region)) {\r\n                        if (_.isUndefined(region)) {\r\n                            region = new Region('default-region-of-' + this._name);\r\n\r\n                        } else if (!(region instanceof Region)) {\r\n                            logger.error('Regionインスタンスを指定してください。');\r\n                        }\r\n\r\n                        this.region = region;\r\n                    } else {\r\n                        if (_.isUndefined(region)) {\r\n                            region = new Region(false);\r\n\r\n                        } else if (!(region instanceof Region)) {\r\n                            logger.error('Regionインスタンスを指定してください。');\r\n                        }\r\n                    }\r\n\r\n                    region._parent = this;\r\n                    this._regions.push(region);\r\n\r\n                    this._addObserver('regions', region);\r\n                    region._addObserver('parent', this);\r\n\r\n                    region._update('update-relation');\r\n\r\n                    return region;\r\n                },\r\n\r\n                removeRegion: function (region) {\r\n                    var index;\r\n\r\n                    if (!(region instanceof Region)) {\r\n                        logger.error('Regionインスタンスを指定してください。');\r\n                    }\r\n\r\n                    region._parent = null;\r\n\r\n                    index = _.indexOf(this._regions, region);\r\n                    if (index > -1) {\r\n                        this._regions.splice(index, 1);\r\n\r\n                    } else {\r\n                        logger.error('削除対象のRegionインスタンスが見つかりません。');\r\n                    }\r\n\r\n                    if (this.region === region) {\r\n                        this.region = null;\r\n                    }\r\n\r\n                    region._update('update-relation');\r\n\r\n                    this._removeObserver('regions', region);\r\n                    region._removeObserver('parent', this);\r\n\r\n                    return region;\r\n                },\r\n            },\r\n\r\n            region: {\r\n                addState: function () {\r\n                    var states, i, l, state, currentLevel, root;\r\n                    states = _.toArray(arguments);\r\n\r\n                    for (i = 0, l = states.length; i < l; i += 1) {\r\n                        state = states[i];\r\n\r\n                        if (!(state instanceof ProtoState)) {\r\n                            logger.error('Stateインスタンスを指定してください。');\r\n                        }\r\n\r\n                        if (state instanceof InitialPseudoState) {\r\n                            this._initialPseudo = state;\r\n\r\n                        } else if (state instanceof FinalState) {\r\n                            this._final = state;\r\n\r\n                        } else if (state instanceof HistoryPseudoState) {\r\n                            this._historyPseudo = state;\r\n                        }\r\n\r\n                        this._states.push(state);\r\n                        this._states[state._id] = state;\r\n                        this._addObserver('states', state);\r\n\r\n                        state._container = this;\r\n                        state._addObserver('container', this);\r\n\r\n                        currentLevel = this._getParentLevel() + 1;\r\n                        root = this._getRoot();\r\n\r\n                        state._updateRelation(currentLevel, root);\r\n                    }\r\n\r\n                    return states.length > 1 ? states : _.first(states);\r\n                },\r\n\r\n                /* 引数にStateインスタンスを複数指定可 */\r\n                removeState: function () {\r\n                    var states, i, state;\r\n                    states = _.toArray(arguments);\r\n\r\n                    for (i = this._states.length; i--;) {\r\n                        state = this._states[i];\r\n\r\n                        if (_.indexOf(states, state) > -1) {\r\n                            if (state instanceof HistoryPseudoState) {\r\n                                this._historyPseudo = null;\r\n                            }\r\n\r\n                            this._states.splice(i, 1);\r\n                            delete this._states[state._id];\r\n\r\n                            this._removeObserver('states', state);\r\n\r\n                            state._container = null;\r\n                            state._removeObserver('container', this);\r\n\r\n                            state._updateRelation(0, null);\r\n                        }\r\n                    }\r\n\r\n                    return states.length > 1 ? states : _.first(states);\r\n                },\r\n\r\n                addTransition: function () {\r\n                    var transits, i, l, transit, result, currentLevel, root;\r\n                    transits = _.toArray(arguments);\r\n\r\n                    for (i = 0, l = transits.length; i < l; i += 1) {\r\n                        transit = transits[i];\r\n\r\n                        if (!(transit instanceof Transition)) {\r\n                            logger.error('Transitionインスタンスを指定してください。');\r\n                        }\r\n\r\n                        if (transit._rawSource === InitialPseudoState || isFalsy(transit._rawSource)) {\r\n                            transit._source = this._initialPseudo;\r\n\r\n                        } else {\r\n                            result = _findState(this, transit._rawSource, 0);\r\n\r\n                            if (_.isUndefined(result)) {\r\n                                result = _findState(this, transit._rawSource, 1);\r\n\r\n                                if (!_.isUndefined(result)) {\r\n                                    transit._exitViaExitPoint = true;\r\n\r\n                                } else {\r\n                                    logger.error('遷移元のStateインスタンスが見つかりません。');\r\n                                }\r\n                            }\r\n\r\n                            transit._source = transit._rawSource;\r\n                        }\r\n\r\n                        if (transit._rawTarget === FinalState || isFalsy(transit._rawTarget)) {\r\n                            transit._target = this._final;\r\n\r\n                        } else {\r\n                            result = _findState(this, transit._rawTarget, 0);\r\n\r\n                            if (_.isUndefined(result)) {\r\n                                result = _findState(this, transit._rawTarget, 1);\r\n\r\n                                if (!_.isUndefined(result)) {\r\n                                    transit._isExplicitEntry = true;\r\n\r\n                                } else {\r\n                                    logger.error('遷移先のStateインスタンスが見つかりません。');\r\n                                }\r\n                            }\r\n\r\n                            transit._target = transit._rawTarget;\r\n                        }\r\n\r\n                        if (transit._name === transit._id) {\r\n                            transit._name = 'transit-from-' + transit._source._name + '-to-' + transit._target._name;\r\n                        }\r\n\r\n                        this._transits.push(transit);\r\n                        this._transits[transit._id] = transit;\r\n                        this._addObserver('transits', transit);\r\n\r\n                        transit._container = this;\r\n                        transit._addObserver('container', this);\r\n\r\n                        currentLevel = this._getParentLevel() + 1;\r\n                        root = this._getRoot();\r\n\r\n                        transit._updateRelation(currentLevel, root);\r\n                    }\r\n\r\n                    return transits.length > 1 ? transits : _.first(transits);\r\n                },\r\n\r\n                removeTransition: function () {\r\n                    var transits, i, transit;\r\n                    transits = _.toArray(arguments);\r\n\r\n                    for (i = this._transits.length; i--;) {\r\n                        transit = this._transits[i];\r\n\r\n                        if (_.indexOf(transits, transit) > -1) {\r\n                            this._transits.splice(i, 1);\r\n                            delete this._transits[transit._id];\r\n                            this._removeObserver('transits', transit);\r\n\r\n                            transit._source = null;\r\n                            transit._target = null;\r\n\r\n                            transit._container = null;\r\n                            transit._removeObserver('container', this);\r\n\r\n                            transit._updateRelation(0, null);\r\n                        }\r\n                    }\r\n\r\n                    return transits.length > 1 ? transits : _.first(transits);\r\n                },\r\n            },\r\n\r\n            subMachine: {\r\n                addLink: function (machine) {\r\n                    if (!(machine instanceof Machine)) {\r\n                        logger.error('Machineインスタンスを指定してください。');\r\n                    }\r\n\r\n                    this._link = machine;\r\n                    this._addObserver('outbound', machine);\r\n\r\n                    machine._addObserver('inbound', this);\r\n                },\r\n\r\n                removeLink: function () {\r\n                    this._removeObserver('outbound', this._link);\r\n\r\n                    this._link._removeObserver('inbound', this);\r\n                    this._link = null;\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    Model = function (data) {\r\n        this._data = {};\r\n        this._cache = null;\r\n\r\n        if (_.isObject(data)) {\r\n            this._data = this._extendDeep(this._data, data);\r\n        }\r\n    };\r\n\r\n    Model.prototype = _.create(Object.prototype, {\r\n        constructor: Model,\r\n        \r\n        get: function (key) {\r\n            return this._data[key];\r\n        },\r\n\r\n        set: function (key, value) {\r\n            this._data[key] = value;\r\n            return value;\r\n        },\r\n\r\n        unset: function (key) {\r\n            var value = this._data[key];\r\n            if (!_.isUndefined(value)) {\r\n                delete this._data[key];\r\n                return value;\r\n            }\r\n        },\r\n\r\n        extend: function (data) {\r\n            return this._extendDeep(this._data, data);\r\n        },\r\n\r\n        save: function () {\r\n            this._cache = this._extendDeep(this._cache, this._data);\r\n        },\r\n\r\n        restore: function () {\r\n            if (!_.isNull(this._cache)) {\r\n                this._data = {};\r\n                this._data = this._extendDeep(this._data, this._cache);\r\n            }\r\n        },\r\n\r\n        clear: function () {\r\n            this._data = {};\r\n            this._cache = null;\r\n        },\r\n\r\n        _cname: 'Model',\r\n        \r\n        _extendDeep: function (destination, source) {\r\n            destination = destination || {};\r\n\r\n            _.each(source, _.bind(function (value, key) {\r\n                if (_.isObject(value)) {\r\n                    if (_.isFunction(value)) {\r\n                        logger.error('Functionはdataプロパティに登録できません。methodsプロパティに登録してください。');\r\n                    }\r\n\r\n                    destination[key] = _.isArray(value) ? [] : {};\r\n                    this._extendDeep(destination[key], value);\r\n                } else {\r\n                    destination[key] = value;\r\n                }\r\n            }, this));\r\n\r\n            return destination;\r\n        },\r\n    });\r\n\r\n    Subject = function () {\r\n        this._observers = {};\r\n    };\r\n\r\n    Subject.prototype = _.create(Object.prototype, {\r\n        constructor: Subject,\r\n        \r\n        _cname: 'Subject',\r\n\r\n        _countObservers: function (type) {\r\n            var result = 0;\r\n            if (!_.isUndefined(this._observers[type])) {\r\n                result = this._observers[type].length;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _setObserverType: function () {\r\n            var types, type, i, l;\r\n            types = _.toArray(arguments);\r\n\r\n            for (i = 0, l = types.length; i < l; i += 1) {\r\n                type = types[i];\r\n                if (_.isUndefined(this._observers[type])) {\r\n                    this._observers[type] = [];\r\n                }\r\n            }\r\n        },\r\n\r\n        _addObserver: function (type, observer) {\r\n            if (_.isUndefined(this._observers[type])) {\r\n                this._observers[type] = [];\r\n            }\r\n            this._observers[type].push(observer);\r\n        },\r\n\r\n        _removeObserver: function (type, observer) {\r\n            var observers, index;\r\n            observers = this._observers[type];\r\n\r\n            if (_.isUndefined(observers)) {\r\n                logger.warn('オブザーバーが登録されていません。');\r\n                return;\r\n            }\r\n\r\n            index = _.indexOf(observers, observer);\r\n            if (index > -1) {\r\n                observers.splice(index, 1);\r\n            }\r\n        },\r\n\r\n        _notify: function (type) {\r\n            var observers, i, l, observer, args;\r\n            observers = this._observers[type];\r\n            args = _.toArray(arguments).slice(1);\r\n\r\n            if (_.isUndefined(observers)) {\r\n                logger.warn('オブザーバーが登録されていません。');\r\n                return;\r\n            }\r\n\r\n            for (i = 0, l = observers.length; i < l; i += 1) {\r\n                observer = observers[i];\r\n                if (_.isFunction(observer._update)) {\r\n                    observer._update.apply(observer, args);\r\n                }\r\n            }\r\n        },\r\n    });\r\n\r\n    Entity = function (name) {\r\n        Subject.call(this);\r\n\r\n        this._id = uuidv4();\r\n        this._name = !isFalsy(name) ? name : this._id;\r\n        this._type = 'entity';\r\n        this._status = 'inactive';\r\n\r\n        this.model = new Model();\r\n        this.props = {};\r\n        this.methods = {};\r\n\r\n        this._setObserverType('root');\r\n    };\r\n\r\n    Entity.prototype = _.create(Subject.prototype, _.extend({\r\n        constructor: Entity,\r\n\r\n        getId: function () {\r\n            return this._id;\r\n        },\r\n\r\n        getName: function () {\r\n            return this._name;\r\n        },\r\n\r\n        setName: function (name) {\r\n            this._name = name;\r\n            return name;\r\n        },\r\n\r\n        isActive: function () {\r\n            return this._status === 'active';\r\n        },\r\n\r\n        addMethod: function (object) {\r\n            var self, bindObject;\r\n\r\n            self = this;\r\n            bindObject = _.mapObject(object, function (method) {\r\n                return _.bind(method, self);\r\n            });\r\n\r\n            _.extend(this.methods, bindObject);\r\n            return this.methods;\r\n        },\r\n        \r\n        _cname: 'Entity',\r\n\r\n        _activate: function () {\r\n            this._status = 'active';\r\n            logger.info(this._cname + 'インスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n        },\r\n\r\n        _inactivate: function () {\r\n            this._status = 'inactive';\r\n            logger.info(this._cname + 'インスタンス\"' + this._name + '\"が非アクティブ化されました。');\r\n        },\r\n\r\n        _update: _.noop,\r\n\r\n    }, mixin.accessor));\r\n\r\n    Elem = function (name) {\r\n        Entity.call(this, name);\r\n\r\n        this._type = 'element';\r\n\r\n        this._container = null;\r\n        this._root = null;\r\n        this._level = 0;\r\n\r\n        this._setObserverType('container');\r\n\r\n        Object.defineProperties(this, mixin.descriptor);\r\n    };\r\n\r\n    Elem.prototype = _.create(Entity.prototype, _.extend({\r\n        constructor: Elem,\r\n\r\n        getContainer: function () {\r\n            return this._container;\r\n        },\r\n\r\n        getCurrentLevel: function () {\r\n            return this._level;\r\n        },\r\n\r\n        _cname: 'Elem',\r\n        \r\n        _async: function (callback) {\r\n            this._notify('root', 'async', _.bind(function () {\r\n                _.bind(callback, this)();\r\n                return Promise.resolve();\r\n            }, this));\r\n        },\r\n    }, mixin.helper));\r\n\r\n    ProtoState = function (name) {\r\n        Elem.call(this, name);\r\n\r\n        this._type = 'state';\r\n        this.region = null;\r\n        this._regions = [];\r\n\r\n        this._setObserverType('regions');\r\n    };\r\n\r\n    ProtoState.prototype = _.create(Elem.prototype, _.extend({\r\n        constructor: ProtoState,\r\n\r\n        getRegion: function (index) {\r\n            if (_.isNumber(index)) {\r\n                return this._regions[index];\r\n\r\n            } else {\r\n                return this.region;\r\n            }\r\n        },\r\n\r\n        completion: function () {\r\n            this._async(function () {\r\n                if (this.isActive()) {\r\n                    this._exit();\r\n\r\n                    if (!_.isNull(this._container)) {\r\n                        this._notify('container', 'completion');\r\n\r\n                    } else {\r\n                        logger.error(this._cname + 'インスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n                    }\r\n                } else {\r\n                    logger.error(this._cname + 'インスタンス\"' + this._name + '\"はすでに非アクティブ化されています。');\r\n                }\r\n            });\r\n        },\r\n        \r\n        _cname: 'ProtoState',\r\n\r\n        _getSuperState: function () {\r\n            var result = null;\r\n            if (!_.isNull(this._container) && !_.isNull(this._container._parent)) {\r\n                result = this._container._parent;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _update: function (event) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'entry':\r\n                    this._entry.apply(this, args);\r\n                    break;\r\n\r\n                case 'exit':\r\n                    this._exit.apply(this, args);\r\n                    break;\r\n\r\n                case 'update-relation':\r\n                    this._updateRelation.apply(this, args);\r\n                    break;\r\n\r\n                case 'completion':\r\n                    this.completion.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _updateRelation: function (currentLevel, root) {\r\n            this._level = currentLevel;\r\n            this._root = root;\r\n\r\n            this._notify('regions', 'update-relation');\r\n        },\r\n\r\n        _entry: function () {\r\n            if (!this.isActive()) {\r\n                this._activate();\r\n                this._notify('regions', 'entry');\r\n            }\r\n        },\r\n\r\n        _exit: function () {\r\n            if (this.isActive()) {\r\n                this._notify('regions', 'exit');\r\n                this._inactivate();\r\n            }\r\n        },\r\n    }, mixin.manipulator.state));\r\n\r\n    State = function (name, options) {\r\n        ProtoState.call(this, name);\r\n\r\n        options = _.defaults(options || {}, _.clone(State.options));\r\n\r\n        if (_.isObject(options.data)) {\r\n            this.extend(options.data);\r\n        }\r\n\r\n        this.save();\r\n\r\n        if (_.isObject(options.props)) {\r\n            _.extend(this.props, options.props);\r\n        }\r\n\r\n        if (_.isObject(options.methods)) {\r\n            this.addMethod(options.methods);\r\n        }\r\n\r\n        this._entryAction = options.entryAction;\r\n        this._exitAction = options.exitAction;\r\n        this._doActivity = options.doActivity;\r\n\r\n        this._autoTransition = options.autoTransition;\r\n\r\n        this._loop = options.loop;\r\n        this._fps = options.fps;\r\n        this._interval = 1000 / this._fps;\r\n\r\n        this._timerId = 0;\r\n        this._lastCallTime = 0;\r\n    };\r\n\r\n    State.options = {\r\n        entryAction: _.noop,\r\n        exitAction: _.noop,\r\n        doActivity: _.noop,\r\n\r\n        autoTransition: false,\r\n        loop: false,\r\n        fps: 60,\r\n    };\r\n\r\n    State.prototype = _.create(ProtoState.prototype, {\r\n        constructor: State,\r\n\r\n        completion: function () {\r\n            this._async(function () {\r\n                var transit;\r\n\r\n                if (this.isActive()) {\r\n                    if (!_.isNull(this._container)) {\r\n                        transit = _findNextTransition(this._container, this);\r\n                        if (!_.isUndefined(transit)) {\r\n                            transit.trigger();\r\n\r\n                        } else {\r\n                            this._exit();\r\n                            this._notify('container', 'completion');\r\n                        }\r\n                    } else {\r\n                        logger.error(this._cname + 'インスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n                    }\r\n                } else {\r\n                    logger.error(this._cname + 'インスタンス\"' + this._name + '\"はすでに非アクティブ化されています。');\r\n                }\r\n            });\r\n        },\r\n        \r\n        _cname: 'State',\r\n\r\n        _update: function (event) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'entry':\r\n                    this._entry.apply(this, args);\r\n                    break;\r\n\r\n                case 'exit':\r\n                    this._exit.apply(this, args);\r\n                    break;\r\n\r\n                case 'update-relation':\r\n                    this._updateRelation.apply(this, args);\r\n                    break;\r\n\r\n                case 'completion':\r\n                    this.completion.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _setTimer: function (callback) {\r\n            this._timerId = 0;\r\n            this._lastCallTime = 0;\r\n\r\n            this._repeat(callback);\r\n        },\r\n\r\n        _clearTimer: function () {\r\n            clearTimeout(this._timerId);\r\n        },\r\n\r\n        _repeat: function (callback) {\r\n            var currentTime, processingTime, timeToCall;\r\n\r\n            currentTime = _.now();\r\n            processingTime = this._lastCallTime !== 0 ? currentTime - this._lastCallTime : 0;\r\n            timeToCall = Math.max(this._interval - processingTime, 0);\r\n\r\n            this._lastCallTime = currentTime + timeToCall;\r\n            this._timerId = setTimeout(_.bind(this._timeout, this, callback, currentTime, processingTime), timeToCall);\r\n\r\n            return this._timerId;\r\n        },\r\n\r\n        _timeout: function (callback, previousTime, processingTime) {\r\n            var deltaTime;\r\n            deltaTime = _.now() - previousTime + processingTime;\r\n\r\n            callback(deltaTime);\r\n            this._repeat(callback);\r\n        },\r\n\r\n        _activate: function () {\r\n            var root, model, props, methods;\r\n\r\n            root = this._root;\r\n            if (!_.isNull(root)) {\r\n                model = root.model;\r\n                props = root.props;\r\n                methods = root.methods;\r\n\r\n            } else {\r\n                logger.error('Machineインスタンスの参照が存在しません。');\r\n            }\r\n\r\n            this._status = 'active';\r\n            logger.info(this._cname + 'インスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            this._entryAction(model, props, methods);\r\n\r\n            if (this._loop) {\r\n                this._setTimer(_.bind(function (deltaTime) {\r\n                    this._doActivity(deltaTime, model, props, methods);\r\n\r\n                    if (this._autoTransition) {\r\n                        this.completion();\r\n                    }\r\n                }, this));\r\n\r\n            } else {\r\n                this._doActivity(model, props, methods);\r\n\r\n                if (this._autoTransition) {\r\n                    this.completion();\r\n                }\r\n            }\r\n        },\r\n\r\n        _inactivate: function () {\r\n            var root, model, props, methods;\r\n\r\n            root = this._root;\r\n            if (!_.isNull(root)) {\r\n                model = root.model;\r\n                props = root.props;\r\n                methods = root.methods;\r\n\r\n            } else {\r\n                logger.error('Machineインスタンスの参照が存在しません。');\r\n            }\r\n\r\n            this._clearTimer();\r\n\r\n            if (!_.isNull(this._container)) {\r\n                this._notify('container', 'set-previous-state', this);\r\n            }\r\n\r\n            this._exitAction(model, props, methods);\r\n\r\n            this._status = 'inactive';\r\n            logger.info(this._cname + 'インスタンス\"' + this._name + '\"が非アクティブ化されました。');\r\n\r\n        },\r\n\r\n        _entry: function (history, priority) {\r\n            if (!this.isActive()) {\r\n                this._activate();\r\n                this._notify('regions', 'entry', history, priority);\r\n            }\r\n        },\r\n\r\n    });\r\n\r\n    Machine = function (name, options) {\r\n        ProtoState.call(this, name, options);\r\n\r\n        options = options || {};\r\n\r\n        if (_.isObject(options.data)) {\r\n            this.extend(options.data);\r\n        }\r\n\r\n        this.save();\r\n\r\n        if (_.isObject(options.props)) {\r\n            _.extend(this.props, options.props);\r\n        }\r\n\r\n        if (_.isObject(options.methods)) {\r\n            this.addMethod(options.methods);\r\n        }\r\n\r\n        this._deployed = false;\r\n        this._promise = null;\r\n\r\n        this.appendRegion();\r\n        this._setObserverType('inbound');\r\n    };\r\n\r\n    Machine.prototype = _.create(ProtoState.prototype, {\r\n        constructor: Machine,\r\n\r\n        deploy: function () {\r\n            this._deployed = true;\r\n\r\n            this._promise = Promise.resolve();\r\n            this._updateRelation(this._level, this);\r\n\r\n            _eachEntity(this, _.bind(function (entity) {\r\n                if (!(entity instanceof Machine)) {\r\n                    entity._addObserver('root', this);\r\n                }\r\n            }, this));\r\n\r\n            return this;\r\n        },\r\n\r\n        undeploy: function () {\r\n            this._deployed = false;\r\n            this._promise = null;\r\n\r\n            _eachEntity(this, _.bind(function (entity) {\r\n                if (!(entity instanceof Machine)) {\r\n                    entity._removeObserver('root', this);\r\n                }\r\n\r\n            }, this));\r\n\r\n            this._updateRelation(this._level, null);\r\n\r\n            return this;\r\n        },\r\n\r\n        start: function (priority) {\r\n            if (!this._deployed) {\r\n                logger.error('start()の前にdeploy()メソッドを実行してください。');\r\n            }\r\n\r\n            if (!this.isActive()) {\r\n                logger.info('Machineインスタンス\"' + this._name + '\"が動作を開始しました。');\r\n\r\n                this._stackPromise(_.bind(function () {\r\n                    this._entry(undefined, priority);\r\n\r\n                    return Promise.resolve();\r\n                }, this));\r\n\r\n            } else {\r\n                logger.warn('Machineインスタンス\"' + this._name + '\"はすでに起動しています。');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        finish: function () {\r\n            if (!this._deployed) {\r\n                logger.error('start()の前にdeploy()メソッドを実行してください。');\r\n            }\r\n\r\n            if (this.isActive()) {\r\n                this.completion();\r\n            } else {\r\n                logger.warn('Machineインスタンス\"' + this._name + '\"はすでに動作を終了しています。');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        completion: function () {\r\n            this._stackPromise(_.bind(function () {\r\n                this._exit();\r\n                logger.info('Machineインスタンス\"' + this._name + '\"が動作を終了しました。');\r\n\r\n                return Promise.resolve();\r\n            }, this));\r\n        },\r\n        \r\n        _cname: 'Machine',\r\n\r\n        _stackPromise: function (callback) {\r\n            this._promise = this._promise.then(callback).catch(this._onRejected);\r\n        },\r\n\r\n        _aborted: function (state) {\r\n            logger.error('Machineインスタンス\"' + this._name + '\"は処理を停止しました。');\r\n        },\r\n\r\n        _outerExecution: function (key) {\r\n            var i, l, region, state;\r\n\r\n            if (!_.isUndefined(key)) {\r\n                for (i = 0, l = this._regions.length; i < l; i += 1) {\r\n                    region = this._regions[i];\r\n                    state = region._states[key];\r\n                    if (!_.isUndefined(state)) {\r\n                        this.start(state);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                logger.error('エンドポイントのEntryPointPseudoStateインスタンスが指定されていません。');\r\n\r\n            } else {\r\n                this.start();\r\n            }\r\n        },\r\n\r\n        _linkBack: function (state) {\r\n            this.completion();\r\n\r\n            this._stackPromise(_.bind(function () {\r\n                this._notify('inbound', 'link-back', state._id);\r\n\r\n                return Promise.resolve();\r\n            }, this));\r\n        },\r\n\r\n        _update: function (event, callback) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'async':\r\n                    this._stackPromise(callback);\r\n                    break;\r\n\r\n                case 'entry':\r\n                    this._entry.apply(this, args);\r\n                    break;\r\n\r\n                case 'exit':\r\n                    this._exit.apply(this, args);\r\n                    break;\r\n\r\n                case 'completion':\r\n                    this.completion.apply(this, args);\r\n                    break;\r\n\r\n                case 'termination':\r\n                    this._aborted.apply(this, args);\r\n                    break;\r\n\r\n                case 'link-forward':\r\n                    this._outerExecution.apply(this, args);\r\n                    break;\r\n\r\n                case 'exit-point':\r\n                    this._linkBack.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _onRejected: function (e) {\r\n            logger.info(e);\r\n            return Promise.reject(e);\r\n        },\r\n\r\n        _entry: function (history, priority) {\r\n            if (!this.isActive()) {\r\n                this._activate();\r\n                this._notify('regions', 'entry', history, priority);\r\n            }\r\n        },\r\n    });\r\n\r\n    FinalState = function (name) {\r\n        ProtoState.call(this, name);\r\n    };\r\n\r\n    FinalState.prototype = _.create(ProtoState.prototype, _.extend({\r\n        constructor: FinalState,\r\n        \r\n        _cname: 'FinalState',\r\n\r\n        _activate: function () {\r\n            this._status = 'active';\r\n            logger.info('FinalStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            this.completion();\r\n        },\r\n\r\n        _inactivate: function () {\r\n            this._status = 'inactive';\r\n\r\n            if (!_.isNull(this._container)) {\r\n                this._notify('container', 'set-previous-state', null);\r\n            }\r\n\r\n            logger.info('FinalStateインスタンス\"' + this._name + '\"が非アクティブ化されました。');\r\n        },\r\n    }, mixin.disable));\r\n\r\n    SubMachine = function (name) {\r\n        ProtoState.call(this, name);\r\n\r\n        this._link = null;\r\n        this._deployed = false;\r\n\r\n        this.appendRegion();\r\n        this._setObserverType('outbound');\r\n    };\r\n\r\n    SubMachine.prototype = _.create(ProtoState.prototype, _.extend({\r\n        constructor: SubMachine,\r\n\r\n        deploy: function () {\r\n            this._deployed = true;\r\n\r\n            _eachEntity(this, _.bind(function (entity) {\r\n                if (entity instanceof ProtoState) {\r\n                    if (entity instanceof PseudoState) {\r\n                        if (entity instanceof ConnectionPointPseudoState) {\r\n                            entity._addObserver('sub-root', this);\r\n\r\n                            if (entity._getSuperState() === this) {\r\n                                entity._isMediator = true;\r\n\r\n                            } else {\r\n                                logger.error('ConnectionPointPseudoStateインスタンスはサブマシン直下のサブ状態でなければなりません。');\r\n                            }\r\n                        } else if (!(entity instanceof InitialPseudoState)) {\r\n                            logger.error('SubMachineインスタンスはConnectionPointPseudoStateクラス以外の状態を追加できません。');\r\n                        }\r\n                    } else if (!(entity instanceof SubMachine) && !(entity instanceof FinalState)) {\r\n                        logger.error('SubMachineインスタンスはConnectionPointPseudoStateクラス以外の状態を保持できません。');\r\n                    }\r\n                }\r\n            }, this));\r\n\r\n            return this;\r\n        },\r\n\r\n        undeploy: function () {\r\n            this._deployed = false;\r\n\r\n            _eachEntity(this, _.bind(function (entity) {\r\n                if (entity instanceof ProtoState) {\r\n                    if (entity instanceof PseudoState) {\r\n                        if (entity instanceof ConnectionPointPseudoState) {\r\n                            entity._removeObserver('sub-root', this);\r\n                            entity._isMediator = false;\r\n\r\n                        } else if (!(entity instanceof InitialPseudoState)) {\r\n                            logger.error('SubMachineインスタンスはConnectionPointPseudoStateクラス以外の状態を追加できません。');\r\n                        }\r\n                    } else if (!(entity instanceof SubMachine) && !(entity instanceof FinalState)) {\r\n                        logger.error('SubMachineインスタンスはConnectionPointPseudoStateクラス以外の状態を保持できません。');\r\n                    }\r\n                }\r\n            }, this));\r\n\r\n            return this;\r\n        },\r\n        \r\n        _cname: 'SubMachine',\r\n\r\n        _linkForward: function (state) {\r\n            this._async(_.bind(function () {\r\n                state._exit();\r\n\r\n                if (!_.isEmpty(state._key)) {\r\n                    this._notify('outbound', 'link-forward', state._key);\r\n\r\n                } else {\r\n                    logger.error('リンク先のマシンに渡すキーが指定されていません。');\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        _innerExecution: function (id) {\r\n            var exitPoint, i, l, region;\r\n\r\n            for (i = 0, l = this._regions.length; i < l; i += 1) {\r\n                region = this._regions[i];\r\n\r\n                exitPoint = _.findWhere(region._states, {_key: id});\r\n\r\n                if (!_.isUndefined(exitPoint)) {\r\n                    exitPoint._entry();\r\n\r\n                } else {\r\n                    logger.error('エンドポイントのExitPointPseudoStateインスタンスが指定されていません。');\r\n                }\r\n            }\r\n        },\r\n\r\n        _update: function (event) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'entry-point':\r\n                    this._linkForward.apply(this, args);\r\n                    break;\r\n\r\n                case 'link-back':\r\n                    this._innerExecution.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _entry: function (history, priority) {\r\n            if (!this._deployed) {\r\n                logger.error('SubMachineインスタンスのdeploy()メソッドを実行してください。');\r\n            }\r\n\r\n            if (!this.isActive()) {\r\n                this._activate();\r\n                this._notify('regions', 'entry', history, priority);\r\n            }\r\n        },\r\n\r\n        _exit: function () {\r\n            if (!this._deployed) {\r\n                logger.error('SubMachineインスタンスのdeploy()メソッドを実行してください。');\r\n            }\r\n\r\n            if (this.isActive()) {\r\n                this._notify('regions', 'exit');\r\n                this._inactivate();\r\n            }\r\n        },\r\n    }, mixin.manipulator.subMachine));\r\n\r\n\r\n    PseudoState = function (name) {\r\n        ProtoState.call(this, name);\r\n\r\n        this._type = 'pseudo-state';\r\n    };\r\n\r\n    PseudoState.prototype = _.create(ProtoState.prototype, _.extend({\r\n        constructor: PseudoState,\r\n\r\n        _cname: 'PseudoState',\r\n        \r\n        _inactivate: function () {\r\n            this._status = 'inactive';\r\n\r\n            if (!_.isNull(this._container)) {\r\n                this._notify('container', 'set-previous-state', null);\r\n            }\r\n\r\n            logger.info(this._cname + 'インスタンス\"' + this._name + '\"が非アクティブ化されました。');\r\n        },\r\n    }, mixin.disable));\r\n\r\n    InitialPseudoState = function (name) {\r\n        PseudoState.call(this, name);\r\n    };\r\n\r\n    InitialPseudoState.prototype = _.create(PseudoState.prototype, {\r\n        constructor: InitialPseudoState,\r\n\r\n        _cname: 'InitialPseudoState',\r\n        \r\n        _activate: function () {\r\n            var transit;\r\n\r\n            this._status = 'active';\r\n            logger.info('InitialPseudoStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            if (!_.isNull(this._container)) {\r\n                transit = _findFirstTransition(this._container);\r\n                if (!_.isUndefined(transit)) {\r\n                    transit.trigger();\r\n\r\n                } else {\r\n                    logger.error('Regionインスタンス\"' + this._container._name + '\"の初期遷移が見つかりません。');\r\n                }\r\n            } else {\r\n                logger.error('InitialPseudoStateインスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n            }\r\n        },\r\n    });\r\n\r\n    HistoryPseudoState = function (name, deep) {\r\n        PseudoState.call(this, name);\r\n\r\n        this._isDeep = !_.isUndefined(deep) ? deep : false;\r\n    };\r\n\r\n    HistoryPseudoState.prototype = _.create(PseudoState.prototype, {\r\n        constructor: HistoryPseudoState,\r\n        \r\n        _cname: 'HistoryPseudoState',\r\n    });\r\n\r\n    TerminatePseudoState = function (name) {\r\n        PseudoState.call(this, name);\r\n    };\r\n\r\n    TerminatePseudoState.prototype = _.create(PseudoState.prototype, {\r\n        constructor: TerminatePseudoState,\r\n\r\n        _cname: 'TerminatePseudoState',\r\n        \r\n        _activate: function () {\r\n            this._status = 'active';\r\n            logger.info('TerminatePseudoStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            this._notify('root', 'termination', this);\r\n            throw new Error('ERROR: 停止状態に遷移しました。処理を中断します。');\r\n        },\r\n    });\r\n\r\n    ChoicePseudoState = function (name, condition) {\r\n        PseudoState.call(this, name);\r\n\r\n        this._condition = _.isFunction(condition) ? condition : _.noop;\r\n    };\r\n\r\n    ChoicePseudoState.prototype = _.create(PseudoState.prototype, {\r\n        constructor: ChoicePseudoState,\r\n\r\n        _cname: 'ChoicePseudoState',\r\n        \r\n        _activate: function () {\r\n            var root, model, props, methods, target, transit;\r\n\r\n            root = this._root;\r\n            if (!_.isNull(root)) {\r\n                model = root.model;\r\n                props = root.props;\r\n                methods = root.methods;\r\n\r\n            } else {\r\n                logger.error('Machineインスタンスの参照が存在しません。');\r\n            }\r\n\r\n            this._status = 'active';\r\n            logger.info('ChoicePseudoStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            target = this._condition(model, props, methods);\r\n            if (!(target instanceof ProtoState)) {\r\n                logger.error('遷移先のStateインスタンスが存在しません。');\r\n            }\r\n\r\n            if (!_.isNull(this._container)) {\r\n                transit = _findNextTransition(this._container, this, target);\r\n                if (!_.isUndefined(transit)) {\r\n                    transit.trigger();\r\n\r\n                } else {\r\n                    logger.error('ChoicePseudoStateインスタンス\"' + this._name + '\"起点のTransitionインスタンスが見つかりません。');\r\n                }\r\n            } else {\r\n                logger.error('ChoicePseudoStateインスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n            }\r\n        },\r\n    });\r\n\r\n    ConnectionPointPseudoState = function (name) {\r\n        PseudoState.call(this, name);\r\n\r\n        this._key = '';\r\n        this._isMediator = false;\r\n        this._setObserverType('sub-root');\r\n    };\r\n\r\n    ConnectionPointPseudoState.prototype = _.create(PseudoState.prototype, {\r\n        constructor: ConnectionPointPseudoState,\r\n\r\n        setKey: function (key) {\r\n            this._key = key;\r\n            return key;\r\n        },\r\n        \r\n        _cname: 'ConnectionPointPseudoState',\r\n    });\r\n\r\n    EntryPointPseudoState = function (name) {\r\n        ConnectionPointPseudoState.call(this, name);\r\n    };\r\n\r\n    EntryPointPseudoState.prototype = _.create(ConnectionPointPseudoState.prototype, {\r\n        constructor: EntryPointPseudoState,\r\n\r\n        _cname: 'EntryPointPseudoState',\r\n        \r\n        _activate: function () {\r\n            var transit;\r\n\r\n            this._status = 'active';\r\n            logger.info('EntryPointPseudoStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            if (this._isMediator) {\r\n                this._notify('sub-root', 'entry-point', this);\r\n\r\n            } else {\r\n                if (!_.isNull(this._container)) {\r\n                    transit = _findFirstTransition(this._container, this);\r\n                    if (!_.isUndefined(transit)) {\r\n                        transit.trigger();\r\n\r\n                    } else {\r\n                        logger.error('Regionインスタンス\"' + this._container._name + '\"の初期遷移が見つかりません。');\r\n                    }\r\n                } else {\r\n                    logger.error('EntryPointPseudoStateインスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n                }\r\n            }\r\n        },\r\n    });\r\n\r\n    ExitPointPseudoState = function (name) {\r\n        ConnectionPointPseudoState.call(this, name);\r\n    };\r\n\r\n    ExitPointPseudoState.prototype = _.create(ConnectionPointPseudoState.prototype, {\r\n        constructor: ExitPointPseudoState,\r\n\r\n        _cname: 'ExitPointPseudoState',\r\n        \r\n        _activate: function () {\r\n            var upperContainer, transit;\r\n\r\n            this._status = 'active';\r\n            logger.info('ExitPointPseudoStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            if (!this._isMediator) {\r\n                this._notify('root', 'exit-point', this);\r\n\r\n            } else {\r\n                upperContainer = this._container._getUpperContainer();\r\n                if (!_.isNull(upperContainer)) {\r\n                    transit = _findNextTransition(upperContainer, this);\r\n\r\n                    if (!_.isUndefined(transit)) {\r\n                        transit.trigger();\r\n\r\n                    } else {\r\n                        logger.error('ExitPointPseudoStateインスタンス\"' + this._name + '\"起点のTransitionインスタンスが見つかりません。');\r\n                    }\r\n                } else {\r\n                    logger.error('ExitPointPseudoStateインスタンス\"' + this._name + '\"の上位コンテナが存在しません。');\r\n                }\r\n            }\r\n        },\r\n    });\r\n\r\n    Transition = function (name, source, target, options) {\r\n        Elem.call(this, name);\r\n\r\n        this._type = 'transition';\r\n\r\n        if (source instanceof ProtoState || isFalsy(source) || InitialPseudoState) {\r\n            this._rawSource = source;\r\n\r\n        } else {\r\n            logger.error('第2引数に遷移元のStateインスタンス、またはfalseを指定してください。');\r\n        }\r\n\r\n        if (target instanceof ProtoState || isFalsy(target) || FinalState) {\r\n            this._rawTarget = target;\r\n\r\n        } else {\r\n            logger.error('第3引数に遷移元のStateインスタンス、またはfalseを指定してください。');\r\n        }\r\n\r\n        options = _.defaults(options || {}, _.clone(Transition.options));\r\n\r\n        if (_.isObject(options.data)) {\r\n            this.extend(options.data);\r\n        }\r\n\r\n        this.save();\r\n\r\n        if (_.isObject(options.props)) {\r\n            _.extend(this.props, options.props);\r\n        }\r\n\r\n        if (_.isObject(options.methods)) {\r\n            this.addMethod(options.methods);\r\n        }\r\n\r\n        this._source = null;\r\n        this._target = null;\r\n\r\n        this._guard = options.guard;\r\n        this._effect = options.effect;\r\n        this._internal = options.internal;\r\n\r\n        this._locked = options.locked;\r\n\r\n        this._isExplicitEntry = false;\r\n        this._exitViaExitPoint = false;\r\n    };\r\n\r\n    Transition.options = {\r\n        guard: null,\r\n        effect: null,\r\n        internal: false,\r\n\r\n        locked: true,\r\n    };\r\n\r\n    Transition.prototype = _.create(Elem.prototype, {\r\n        constructor: Transition,\r\n\r\n        trigger: function () {\r\n            var root, model, props, methods;\r\n\r\n            root = this._root;\r\n            if (!_.isNull(root)) {\r\n                model = root.model;\r\n                props = root.props;\r\n                methods = root.methods;\r\n\r\n            } else {\r\n                logger.error('Machineインスタンスの参照が存在しません。');\r\n            }\r\n\r\n            if (_.isNull(this._container)) {\r\n                logger.error('Transitionインスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n            }\r\n\r\n            if (!this._container.isActive()) {\r\n                logger.error('Transitionインスタンス\"' + this._name + '\"のコンテナが非アクティブです。');\r\n            }\r\n\r\n            /* 遷移元が終了状態であったり、遷移先の状態が開始擬似状態である場合、エラー出力 */\r\n            if (this._source instanceof FinalState) {\r\n                logger.error('終了状態を遷移元にすることはできません。');\r\n\r\n            } else if (this._source instanceof TerminatePseudoState) {\r\n                logger.error('停止状態を遷移元にすることはできません。');\r\n\r\n            } else if (this._target instanceof InitialPseudoState) {\r\n                logger.error('開始擬似状態を遷移先にすることはできません。');\r\n            }\r\n\r\n            /* ガードが設定されていたら、ガード判定する */\r\n            if (!_.isNull(this._guard)) {\r\n                if (!this._guard(model, props, methods)) {\r\n                    logger.info('ガードが成立しませんでした。遷移は発生しません。');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this._internal) {\r\n                if (this._source === this._target) {\r\n                    this._async(function () {\r\n                        logger.info('内部遷移を実行します。');\r\n\r\n                            if (!_.isNull(this._effect)) {\r\n                            this._effect(model, props, methods);\r\n                        }\r\n                    });\r\n\r\n                    return;\r\n                } else {\r\n                    logger.error('遷移元と遷移先は同じStateインスタンスを指定してください。');\r\n                }\r\n            }\r\n\r\n            this._async(function () {\r\n                var superState;\r\n\r\n                if (!this.isActive()) {\r\n                    this._activate();\r\n\r\n                } else {\r\n                    logger.error('Transitionインスタンス\"' + this._name + '\"はすでにアクティブ化されています。');\r\n                }\r\n\r\n                if (this._source.isActive()) {\r\n                    if (this._exitViaExitPoint) {\r\n                        superState = this._source._getSuperState();\r\n                        if (!_.isNull(superState)) {\r\n                            superState._exit();\r\n\r\n                        } else {\r\n                            logger.error(this._target._cname + 'インスタンス\"' + this._target._name + '\"の「親」状態が存在しません。');\r\n                        }\r\n                    } else {\r\n                        this._source._exit();\r\n                    }\r\n                } else {\r\n                    logger.error('遷移元' + this._target._cname + 'インスタンス\"' + this._target._name + '\"が非アクティブです。');\r\n                }\r\n\r\n                if (!_.isNull(this._effect)) {\r\n                    this._effect(model, props, methods);\r\n                }\r\n\r\n                if (!this._target.isActive()) {\r\n                    if (this._isExplicitEntry) {\r\n                        superState = this._target._getSuperState();\r\n                        if (!_.isNull(superState)) {\r\n                            superState._entry(undefined, this._target);\r\n\r\n                        } else {\r\n                            logger.error(this._target._cname + 'インスタンス\"' + this._target._name + '\"の「親」状態が存在しません。');\r\n                        }\r\n                    } else {\r\n                        this._target._entry();\r\n                    }\r\n                } else {\r\n                    logger.error('遷移先' + this._target._cname + 'インスタンス\"' + this._target._name + '\"がアクティブです。');\r\n                }\r\n\r\n                if (this.isActive()) {\r\n                    this._inactivate();\r\n\r\n                } else {\r\n                    logger.error('Transitionインスタンス\"' + this._name + '\"はすでに非アクティブ化されています。');\r\n                }\r\n            });\r\n        },\r\n        \r\n        _cname: 'Transition',\r\n\r\n        _update: function (event) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'update-relation':\r\n                    this._updateRelation.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _updateRelation: function (currentLevel, root) {\r\n            this._level = currentLevel;\r\n            this._root = root;\r\n        },\r\n    });\r\n\r\n    Region = function (name, options) {\r\n        Entity.call(this, name);\r\n\r\n        this._type = 'region';\r\n\r\n        options = options || {};\r\n\r\n        if (_.isObject(options.data)) {\r\n            this.extend(options.data);\r\n        }\r\n\r\n        this.save();\r\n\r\n        if (_.isObject(options.props)) {\r\n            _.extend(this.props, options.props);\r\n        }\r\n\r\n        if (_.isObject(options.methods)) {\r\n            this.addMethod(options.methods);\r\n        }\r\n\r\n        this._parent = null;\r\n\r\n        this._initialPseudo = null;\r\n        this._final = null;\r\n        this._historyPseudo = null;\r\n        this._previousState = null;\r\n\r\n        this._states = [];\r\n        this._transits = [];\r\n\r\n        this._setObserverType('parent', 'states', 'transits');\r\n        this._setDefaultStates();\r\n    };\r\n\r\n    Region.prototype = _.create(Entity.prototype, _.extend({\r\n        constructor: Region,\r\n\r\n        hasHistory: function (deep) {\r\n            return isFalsy(deep) ? !_.isNull(this._historyPseudo) :\r\n                !_.isNull(this._historyPseudo) && this._historyPseudo._isDeep;\r\n        },\r\n\r\n        getIndex: function () {\r\n            var result = -1;\r\n\r\n            if (_.isNull(this._parent)) {\r\n                _.indexOf(this._parent._regions, this);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _cname: 'Region',\r\n        \r\n        _update: function (event) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'entry':\r\n                    this._entry.apply(this, args);\r\n                    break;\r\n\r\n                case 'exit':\r\n                    this._exit.apply(this, args);\r\n                    break;\r\n\r\n                case 'update-relation':\r\n                    this._updateRelation.apply(this, args);\r\n                    break;\r\n\r\n                case 'completion':\r\n                    this._completion.apply(this, args);\r\n                    break;\r\n\r\n                case 'set-previous-state':\r\n                    this._setPreviousState.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _getParentLevel: function () {\r\n            var result = -1;\r\n            if (!_.isNull(this._parent)) {\r\n                result = this._parent._level;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _getRoot: function () {\r\n            var result = null;\r\n            if (!_.isNull(this._parent)) {\r\n                return this._parent._root;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _getUpperContainer: function () {\r\n            var result = null;\r\n            if (!_.isNull(this._parent) && !_.isNull(this._parent._container)) {\r\n                result = this._parent._container;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _setDefaultStates: function () {\r\n            var initialPseudo, final;\r\n            initialPseudo = new InitialPseudoState(false);\r\n            final = new FinalState(false);\r\n\r\n            this.addState(initialPseudo, final);\r\n        },\r\n\r\n        _setDefaultStateName: function () {\r\n            this._initialPseudo._name = 'initial-pseudo-state-in-' + this._name;\r\n            this._final._name = 'final-state-in-' + this._name;\r\n        },\r\n\r\n        _updateRelation: function () {\r\n            var currentLevel, root;\r\n\r\n            this._setDefaultStateName();\r\n\r\n            currentLevel = this._getParentLevel() + 1;\r\n            root = this._getRoot();\r\n\r\n            this._notify('states', 'update-relation', currentLevel, root);\r\n            this._notify('transits', 'update-relation', currentLevel, root);\r\n        },\r\n\r\n        _setPreviousState: function (state) {\r\n            this._previousState = state;\r\n            return state;\r\n        },\r\n\r\n        _entry: function (history, priority) {\r\n            var state;\r\n\r\n            if (!this.isActive()) {\r\n                this._activate();\r\n\r\n                if (_.isUndefined(history)) {\r\n                    history = _findDeepHistoryPseudoState(this);\r\n                    history = !_.isUndefined(history);\r\n                }\r\n\r\n                if (_.indexOf(this._states, priority) > -1) {\r\n                    priority._update('entry', history);\r\n\r\n                } else {\r\n                    if (history) {\r\n                        state = this._previousState || this._initialPseudo;\r\n\r\n                    } else if (!_.isNull(this._historyPseudo)) {\r\n                        state = this._previousState || this._initialPseudo;\r\n\r\n                        if (this._historyPseudo._isDeep) {\r\n                            history = true;\r\n                        }\r\n                    } else {\r\n                        state = this._initialPseudo;\r\n                    }\r\n\r\n                    state._update('entry', history, priority);\r\n                }\r\n            }\r\n        },\r\n\r\n        _exit: function () {\r\n            if (this.isActive()) {\r\n                this._notify('states', 'exit');\r\n                this._inactivate();\r\n            }\r\n        },\r\n\r\n        _completion: function () {\r\n            this._inactivate();\r\n\r\n            if (!_.isNull(this._parent)) {\r\n                if (_.every(this._parent._regions, function (region) {\r\n                    return !region.isActive();\r\n                })) {\r\n                    this._notify('parent', 'completion');\r\n                }\r\n            } else {\r\n                logger.error('Regionインスタンス\"' + this._name + '\"の「親」状態が存在しません。');\r\n            }\r\n\r\n        },\r\n    }, mixin.manipulator.region));\r\n\r\n    function _eachEntity(state, callback) {\r\n        var i, j, l, m, region, subState, transit;\r\n\r\n        callback(state);\r\n\r\n        for (i = 0, l = state._regions.length; i < l; i += 1) {\r\n            region = state._regions[i];\r\n            callback(region);\r\n\r\n            for (j = 0, m = region._transits.length; j < m; j += 1) {\r\n                transit = region._transits[j];\r\n                callback(transit);\r\n            }\r\n\r\n            for (j = 0, m = region._states.length; j < m; j += 1) {\r\n                subState = region._states[j];\r\n                _eachEntity(subState, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    function _findState(region, targetState, sublevel) {\r\n        var i, j, l, m, state, subRegion, result;\r\n\r\n        sublevel = !_.isUndefined(sublevel) ? sublevel : Infinity;\r\n\r\n        if (sublevel >= 0) {\r\n            sublevel -= 1;\r\n\r\n            for (i = 0, l = region._states.length; i < l; i += 1) {\r\n                state = region._states[i];\r\n\r\n                if (state === targetState) {\r\n                    return state;\r\n                }\r\n\r\n                for (j = 0, m = state._regions.length; j < m; j += 1) {\r\n                    subRegion = state._regions[j];\r\n                    result = _findState(subRegion, targetState, sublevel);\r\n                    if (!_.isUndefined(result)) {\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function _findDeepHistoryPseudoState(region) {\r\n        var container;\r\n\r\n        if (region.hasHistory(true)) {\r\n            return region._historyPseudo;\r\n        }\r\n\r\n        container = region._getUpperContainer();\r\n        if (!_.isNull(container)) {\r\n            return _findDeepHistoryPseudoState(container);\r\n        }\r\n    }\r\n\r\n    function _findFirstTransition(region, from) {\r\n        var transits = region._transits;\r\n        if (_.isUndefined(from)) {\r\n            from = region._initialPseudo;\r\n\r\n        } else if (from instanceof EntryPointPseudoState) {\r\n\r\n        }\r\n\r\n        return _.find(transits, function (transit) {\r\n            return transit._source === from;\r\n        });\r\n    }\r\n\r\n    function _findNextTransition(region, from, to) {\r\n        var transits = region._transits;\r\n        \r\n        return _.find(transits, function (transit) {\r\n            if (!_.isUndefined(to)) {\r\n                return transit._source === from && transit._target === to;\r\n\r\n            } else if (from instanceof ExitPointPseudoState) {\r\n                return transit._source === from;\r\n                \r\n            } else {\r\n                return transit._source === from && !transit._locked;\r\n            }\r\n        });\r\n    }\r\n\r\n    FSM = _.extend(FSM, {\r\n        Machine: Machine,\r\n        State: State,\r\n        Transition: Transition,\r\n        Region: Region,\r\n\r\n        InitialPseudoState: InitialPseudoState,\r\n        FinalState: FinalState,\r\n        SubMachine: SubMachine,\r\n        HistoryPseudoState: HistoryPseudoState,\r\n        TerminatePseudoState: TerminatePseudoState,\r\n        ChoicePseudoState: ChoicePseudoState,\r\n\r\n        EntryPointPseudoState: EntryPointPseudoState,\r\n        ExitPointPseudoState: ExitPointPseudoState,\r\n    });\r\n\r\n    return FSM;\r\n}));"]}