{"version":3,"sources":["async-fsm.min.js"],"names":["root","factory","define","amd","exports","module","require","Promise","_","uuidv4","FSM","this","_eachEntity","state","callback","i","j","l","m","region","_regions","length","_transits","_states","_findState","targetState","sublevel","subRegion","result","isUndefined","Infinity","_findDeepHistoryPseudoState","container","hasHistory","_historyPseudo","_getUpperContainer","isNull","_findFirstTransition","from","transits","_initialPseudo","find","transit","_source","_findNextTransition","to","ExitPointPseudoState","_locked","_target","logger","isFalsy","max","mixin","Model","Subject","Entity","Elem","ProtoState","State","Machine","FinalState","SubMachine","PseudoState","InitialPseudoState","HistoryPseudoState","TerminatePseudoState","ChoicePseudoState","ConnectionPointPseudoState","EntryPointPseudoState","Transition","Region","config","debuggable","logLevel","logLevelData","debug","message","indexOf","console","log","info","warn","error","Error","negate","Boolean","Math","accessor","get","key","model","set","value","unset","extend","data","save","restore","clear","helper","$get","superState","_getSuperState","$set","$unset","$extend","$save","$restore","$clear","disable","_cname","$props","$methods","addState","removeState","addTransition","transition","removeTransition","appendRegion","removeRegion","descriptor","enumerable","props","methods","manipulator","states","toArray","arguments","_name","apply","_parent","push","_addObserver","_update","index","splice","_removeObserver","currentLevel","_final","_id","_container","_getParentLevel","_getRoot","_updateRelation","first","_rawSource","_exitViaExitPoint","_rawTarget","_isExplicitEntry","subMachine","addLink","machine","_link","removeLink","_data","_cache","isObject","_extendDeep","prototype","create","Object","constructor","destination","source","each","bind","isFunction","isArray","_observers","_countObservers","type","_setObserverType","types","observer","observers","_notify","args","slice","name","call","_type","_status","getId","getName","setName","isActive","addMethod","object","self","bindObject","mapObject","method","_activate","_inactivate","noop","_root","_level","defineProperties","getContainer","getCurrentLevel","_async","resolve","getRegion","isNumber","completion","_exit","event","_entry","options","defaults","clone","_entryAction","entryAction","_exitAction","exitAction","_doActivity","doActivity","_autoTransition","autoTransition","_loop","loop","_fps","fps","_interval","_timerId","_lastCallTime","getTicks","_ticks","getElapsedTime","_elapsedTime","trigger","_setTimer","_startTime","timeToCall","_tick","setTimeout","_clearTimer","clearTimeout","currentTime","deltaTime","processingTime","now","_lastTime","history","priority","_deployed","_promise","deploy","entity","undeploy","start","_stackPromise","undefined","finish","then","catch","_onRejected","_aborted","_outerExecution","_linkBack","e","reject","_isMediator","_linkForward","isEmpty","_key","_innerExecution","id","exitPoint","findWhere","deep","_isDeep","condition","_condition","target","setKey","upperContainer","_guard","guard","_effect","effect","_internal","internal","locked","_previousState","_setDefaultStates","getIndex","_completion","_setPreviousState","initialPseudo","final","_setDefaultStateName","every"],"mappings":"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","file":"async-fsm.min.js","sourcesContent":["/* Async-FSM.js\r\n * version 0.3.4\r\n * \r\n * Copyright (c) 2017 Masa (http://wiz-code.digick.jp)\r\n * LICENSE: MIT license\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(['bluebird', 'underscore', 'uuid/v4'], factory);\r\n\r\n    } else if (typeof exports !== 'undefined') {\r\n        if (typeof module !== 'undefined' && module.exports) {\r\n            exports = module.exports = factory(\r\n                require('bluebird'),\r\n                require('underscore'),\r\n                require('uuid/v4')\r\n            );\r\n        }\r\n    } else {\r\n        if (typeof require === 'function') {\r\n            root.Promise = require('bluebird');\r\n            root._ = require('underscore');\r\n            root.uuidv4 = require('uuid/v4');\r\n        }\r\n\r\n        root.FSM = factory(\r\n            root.Promise,\r\n            root._,\r\n            root.uuidv4\r\n        );\r\n    }\r\n}(this, function (Promise, _, uuidv4) {\r\n    'use strict';\r\n    \r\n    var logger, isFalsy, max, mixin, FSM, Model, Subject, Entity, Elem, ProtoState, State, Machine, FinalState, SubMachine, PseudoState, InitialPseudoState, HistoryPseudoState, TerminatePseudoState, ChoicePseudoState, ConnectionPointPseudoState, EntryPointPseudoState, ExitPointPseudoState, Transition, Region;\r\n\r\n    FSM = {\r\n        config: {\r\n            debuggable: true,\r\n        },\r\n    };\r\n\r\n    logger = {\r\n        logLevel: 'DEBUG',\r\n        logLevelData: [\r\n            'DEBUG',\r\n            'INFO',\r\n            'WARN',\r\n            'ERROR',\r\n        ],\r\n\r\n        debug: function (message) {\r\n            if (FSM.config.debuggable && _.indexOf(this.logLevelData, this.logLevel) <= 0) {\r\n                console.log('DEBUG: ', message);\r\n            }\r\n        },\r\n\r\n        info: function (message) {\r\n            if (FSM.config.debuggable && _.indexOf(this.logLevelData, this.logLevel) <= 1) {\r\n                console.log('INFO: ', message);\r\n            }\r\n        },\r\n\r\n        warn: function (message) {\r\n            if (FSM.config.debuggable && _.indexOf(this.logLevelData, this.logLevel) <= 2) {\r\n                console.log('WARN: ', message);\r\n            }\r\n        },\r\n\r\n        error: function (message) {\r\n            if (FSM.config.debuggable && _.indexOf(this.logLevelData, this.logLevel) <= 3) {\r\n                console.error('ERROR: ', message);\r\n                throw new Error('ERROR: ' + message);\r\n            }\r\n        },\r\n    };\r\n\r\n    isFalsy = _.negate(Boolean);\r\n    max = Math.max;\r\n\r\n    mixin = {\r\n        accessor: {\r\n            get: function (key) {\r\n                return this.model.get(key);\r\n            },\r\n\r\n            set: function (key, value) {\r\n                return this.model.set(key, value);\r\n            },\r\n\r\n            unset: function (key) {\r\n                return this.model.unset(key);\r\n            },\r\n\r\n            extend: function (data) {\r\n                return this.model.extend(data);\r\n            },\r\n\r\n            save: function () {\r\n                this.model.save();\r\n            },\r\n\r\n            restore: function () {\r\n                this.model.restore();\r\n            },\r\n\r\n            clear: function () {\r\n                this.model.clear();\r\n            },\r\n        },\r\n\r\n        helper: {\r\n            $get: function (key) {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    return superState.model.get(key);\r\n                }\r\n            },\r\n\r\n            $set: function (key, value) {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    return superState.model.set(key, value);\r\n                }\r\n            },\r\n\r\n            $unset: function (key) {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    return superState.model.unset(key);\r\n                }\r\n            },\r\n\r\n            $extend: function (data) {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    return superState.model.extend(data);\r\n                }\r\n            },\r\n\r\n            $save: function () {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    superState.model.save();\r\n\r\n                } else {\r\n                    return false;\r\n                }\r\n            },\r\n\r\n            $restore: function () {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    superState.model.restore();\r\n\r\n                } else {\r\n                    return false;\r\n                }\r\n            },\r\n\r\n            $clear: function () {\r\n                var superState = this._getSuperState();\r\n                if (!_.isNull(superState)) {\r\n                    superState.model.clear();\r\n\r\n                } else {\r\n                    return false;\r\n                }\r\n            },\r\n        },\r\n\r\n        disable: {\r\n            get: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            set: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            unset: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            extend: function (data) {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            save: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            restore: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            clear: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $props: null,\r\n\r\n            $methods: null,\r\n\r\n            $get: function (key) {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $set: function (key, value) {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $unset: function (key) {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $extend: function (data) {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $save: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $restore: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            $clear: function () {\r\n                logger.error(this._cname + 'インスタンスは内部データを保持できません。');\r\n            },\r\n\r\n            addState: function () {\r\n                logger.error(this._cname + 'インスタンスはサブ状態を持てません。');\r\n            },\r\n\r\n            removeState: function () {\r\n                logger.error(this._cname + 'インスタンスはサブ状態を持てません。');\r\n            },\r\n\r\n            addTransition: function (transition) {\r\n                logger.error(this._cname + 'インスタンスは遷移を持てません。');\r\n            },\r\n\r\n            removeTransition: function (transition) {\r\n                logger.error(this._cname + 'インスタンスは遷移を持てません。');\r\n            },\r\n\r\n            appendRegion: function (region) {\r\n                logger.error(this._cname + 'インスタンスは領域を持てません。');\r\n            },\r\n\r\n            removeRegion: function (region) {\r\n                logger.error(this._cname + 'インスタンスは領域を持てません。');\r\n            },\r\n        },\r\n\r\n        descriptor: {\r\n            $props: {\r\n                enumerable: true,\r\n                get: function () {\r\n                    var superState = this._getSuperState();\r\n                    if (!_.isNull(superState)) {\r\n                        return superState.props;\r\n                    }\r\n                },\r\n            },\r\n\r\n            $methods: {\r\n                enumerable: true,\r\n                get: function () {\r\n                    var superState = this._getSuperState();\r\n                    if (!_.isNull(superState)) {\r\n                        return superState.methods;\r\n                    }\r\n                },\r\n            },\r\n        },\r\n\r\n        manipulator: {\r\n            state: {\r\n                addState: function () {\r\n                    var states = _.toArray(arguments);\r\n                    if (_.isNull(this.region)) {\r\n                        this.appendRegion();\r\n                        logger.info(this._cname + 'インスタンス\"' + this._name + '\"のRegionインスタンスが自動生成されました。');\r\n                    }\r\n\r\n                    return this.region.addState.apply(this.region, states);\r\n                },\r\n\r\n                removeState: function () {\r\n                    var states = _.toArray(arguments);\r\n                    if (_.isNull(this.region)) {\r\n                        logger.error('コンテナのRegionインスタンスが存在しません。');\r\n                    }\r\n\r\n                    return this.region.removeState.apply(this.region, states);\r\n                },\r\n\r\n                addTransition: function () {\r\n                    var transits = _.toArray(arguments);\r\n                    if (_.isNull(this.region)) {\r\n                        this.appendRegion();\r\n                        logger.info(this._cname + 'インスタンス\"' + this._name + '\"のRegionインスタンスが自動作成されました。');\r\n                    }\r\n\r\n                    return this.region.addTransition.apply(this.region, transits);\r\n                },\r\n\r\n                removeTransition: function () {\r\n                    var transits = _.toArray(arguments);\r\n                    if (_.isNull(this.region)) {\r\n                        logger.error('コンテナのRegionインスタンスが存在しません。');\r\n                    }\r\n\r\n                    return this.region.removeTransition.apply(this.region, transits);\r\n                },\r\n\r\n                appendRegion: function (region) {\r\n                    if (_.isNull(this.region)) {\r\n                        if (_.isUndefined(region)) {\r\n                            region = new Region('default-region-of-' + this._name);\r\n\r\n                        } else if (!(region instanceof Region)) {\r\n                            logger.error('Regionインスタンスを指定してください。');\r\n                        }\r\n\r\n                        this.region = region;\r\n                    } else {\r\n                        if (_.isUndefined(region)) {\r\n                            region = new Region(false);\r\n\r\n                        } else if (!(region instanceof Region)) {\r\n                            logger.error('Regionインスタンスを指定してください。');\r\n                        }\r\n                    }\r\n\r\n                    region._parent = this;\r\n                    this._regions.push(region);\r\n\r\n                    this._addObserver('regions', region);\r\n                    region._addObserver('parent', this);\r\n\r\n                    region._update('update-relation');\r\n\r\n                    return region;\r\n                },\r\n\r\n                removeRegion: function (region) {\r\n                    var index;\r\n\r\n                    if (!(region instanceof Region)) {\r\n                        logger.error('Regionインスタンスを指定してください。');\r\n                    }\r\n\r\n                    region._parent = null;\r\n\r\n                    index = _.indexOf(this._regions, region);\r\n                    if (index > -1) {\r\n                        this._regions.splice(index, 1);\r\n\r\n                    } else {\r\n                        logger.error('削除対象のRegionインスタンスが見つかりません。');\r\n                    }\r\n\r\n                    if (this.region === region) {\r\n                        this.region = null;\r\n                    }\r\n\r\n                    region._update('update-relation');\r\n\r\n                    this._removeObserver('regions', region);\r\n                    region._removeObserver('parent', this);\r\n\r\n                    return region;\r\n                },\r\n            },\r\n\r\n            region: {\r\n                addState: function () {\r\n                    var states, i, l, state, currentLevel, root;\r\n                    states = _.toArray(arguments);\r\n\r\n                    for (i = 0, l = states.length; i < l; i += 1) {\r\n                        state = states[i];\r\n\r\n                        if (!(state instanceof ProtoState)) {\r\n                            logger.error('Stateインスタンスを指定してください。');\r\n                        }\r\n\r\n                        if (state instanceof InitialPseudoState) {\r\n                            this._initialPseudo = state;\r\n\r\n                        } else if (state instanceof FinalState) {\r\n                            this._final = state;\r\n\r\n                        } else if (state instanceof HistoryPseudoState) {\r\n                            this._historyPseudo = state;\r\n                        }\r\n\r\n                        this._states.push(state);\r\n                        this._states[state._id] = state;\r\n                        this._addObserver('states', state);\r\n\r\n                        state._container = this;\r\n                        state._addObserver('container', this);\r\n\r\n                        currentLevel = this._getParentLevel() + 1;\r\n                        root = this._getRoot();\r\n\r\n                        state._updateRelation(currentLevel, root);\r\n                    }\r\n\r\n                    return states.length > 1 ? states : _.first(states);\r\n                },\r\n\r\n                /* 引数にStateインスタンスを複数指定可 */\r\n                removeState: function () {\r\n                    var states, i, state;\r\n                    states = _.toArray(arguments);\r\n\r\n                    for (i = this._states.length; i--;) {\r\n                        state = this._states[i];\r\n\r\n                        if (_.indexOf(states, state) > -1) {\r\n                            if (state instanceof HistoryPseudoState) {\r\n                                this._historyPseudo = null;\r\n                            }\r\n\r\n                            this._states.splice(i, 1);\r\n                            delete this._states[state._id];\r\n\r\n                            this._removeObserver('states', state);\r\n\r\n                            state._container = null;\r\n                            state._removeObserver('container', this);\r\n\r\n                            state._updateRelation(0, null);\r\n                        }\r\n                    }\r\n\r\n                    return states.length > 1 ? states : _.first(states);\r\n                },\r\n\r\n                addTransition: function () {\r\n                    var transits, i, l, transit, result, currentLevel, root;\r\n                    transits = _.toArray(arguments);\r\n\r\n                    for (i = 0, l = transits.length; i < l; i += 1) {\r\n                        transit = transits[i];\r\n\r\n                        if (!(transit instanceof Transition)) {\r\n                            logger.error('Transitionインスタンスを指定してください。');\r\n                        }\r\n\r\n                        if (transit._rawSource === InitialPseudoState || isFalsy(transit._rawSource)) {\r\n                            transit._source = this._initialPseudo;\r\n\r\n                        } else {\r\n                            result = _findState(this, transit._rawSource, 0);\r\n\r\n                            if (_.isUndefined(result)) {\r\n                                result = _findState(this, transit._rawSource, 1);\r\n\r\n                                if (!_.isUndefined(result)) {\r\n                                    transit._exitViaExitPoint = true;\r\n\r\n                                } else {\r\n                                    logger.error('遷移元のStateインスタンスが見つかりません。');\r\n                                }\r\n                            }\r\n\r\n                            transit._source = transit._rawSource;\r\n                        }\r\n\r\n                        if (transit._rawTarget === FinalState || isFalsy(transit._rawTarget)) {\r\n                            transit._target = this._final;\r\n\r\n                        } else {\r\n                            result = _findState(this, transit._rawTarget, 0);\r\n\r\n                            if (_.isUndefined(result)) {\r\n                                result = _findState(this, transit._rawTarget, 1);\r\n\r\n                                if (!_.isUndefined(result)) {\r\n                                    transit._isExplicitEntry = true;\r\n\r\n                                } else {\r\n                                    logger.error('遷移先のStateインスタンスが見つかりません。');\r\n                                }\r\n                            }\r\n\r\n                            transit._target = transit._rawTarget;\r\n                        }\r\n\r\n                        if (transit._name === transit._id) {\r\n                            transit._name = 'transit-from-' + transit._source._name + '-to-' + transit._target._name;\r\n                        }\r\n\r\n                        this._transits.push(transit);\r\n                        this._transits[transit._id] = transit;\r\n                        this._addObserver('transits', transit);\r\n\r\n                        transit._container = this;\r\n                        transit._addObserver('container', this);\r\n\r\n                        currentLevel = this._getParentLevel() + 1;\r\n                        root = this._getRoot();\r\n\r\n                        transit._updateRelation(currentLevel, root);\r\n                    }\r\n\r\n                    return transits.length > 1 ? transits : _.first(transits);\r\n                },\r\n\r\n                removeTransition: function () {\r\n                    var transits, i, transit;\r\n                    transits = _.toArray(arguments);\r\n\r\n                    for (i = this._transits.length; i--;) {\r\n                        transit = this._transits[i];\r\n\r\n                        if (_.indexOf(transits, transit) > -1) {\r\n                            this._transits.splice(i, 1);\r\n                            delete this._transits[transit._id];\r\n                            this._removeObserver('transits', transit);\r\n\r\n                            transit._source = null;\r\n                            transit._target = null;\r\n\r\n                            transit._container = null;\r\n                            transit._removeObserver('container', this);\r\n\r\n                            transit._updateRelation(0, null);\r\n                        }\r\n                    }\r\n\r\n                    return transits.length > 1 ? transits : _.first(transits);\r\n                },\r\n            },\r\n\r\n            subMachine: {\r\n                addLink: function (machine) {\r\n                    if (!(machine instanceof Machine)) {\r\n                        logger.error('Machineインスタンスを指定してください。');\r\n                    }\r\n\r\n                    this._link = machine;\r\n                    this._addObserver('outbound', machine);\r\n\r\n                    machine._addObserver('inbound', this);\r\n                },\r\n\r\n                removeLink: function () {\r\n                    this._removeObserver('outbound', this._link);\r\n\r\n                    this._link._removeObserver('inbound', this);\r\n                    this._link = null;\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    Model = function (data) {\r\n        this._data = {};\r\n        this._cache = null;\r\n\r\n        if (_.isObject(data)) {\r\n            this._extendDeep(this._data, data);\r\n        }\r\n    };\r\n\r\n    Model.prototype = _.create(Object.prototype, {\r\n        constructor: Model,\r\n        \r\n        get: function (key) {\r\n            return this._data[key];\r\n        },\r\n\r\n        set: function (key, value) {\r\n            this._data[key] = value;\r\n            return value;\r\n        },\r\n\r\n        unset: function (key) {\r\n            var value = this._data[key];\r\n            if (!_.isUndefined(value)) {\r\n                delete this._data[key];\r\n                return value;\r\n            }\r\n        },\r\n\r\n        extend: function (data) {\r\n            return this._extendDeep(this._data, data);\r\n        },\r\n\r\n        save: function () {\r\n            this._extendDeep(this._cache, this._data);\r\n        },\r\n\r\n        restore: function () {\r\n            if (!_.isNull(this._cache)) {\r\n                this._data = {};\r\n                this._extendDeep(this._data, this._cache);\r\n            }\r\n        },\r\n\r\n        clear: function () {\r\n            this._data = {};\r\n            this._cache = null;\r\n        },\r\n\r\n        _cname: 'Model',\r\n        \r\n        _extendDeep: function (destination, source) {\r\n            destination = destination || {};\r\n\r\n            _.each(source, _.bind(function (value, key) {\r\n                if (_.isObject(value)) {\r\n                    if (_.isFunction(value)) {\r\n                        logger.error('Functionはdataプロパティに登録できません。methodsプロパティに登録してください。');\r\n                    }\r\n\r\n                    destination[key] = _.isArray(value) ? [] : {};\r\n                    this._extendDeep(destination[key], value);\r\n                } else {\r\n                    destination[key] = value;\r\n                }\r\n            }, this));\r\n\r\n            return destination;\r\n        },\r\n    });\r\n\r\n    Subject = function () {\r\n        this._observers = {};\r\n    };\r\n\r\n    Subject.prototype = _.create(Object.prototype, {\r\n        constructor: Subject,\r\n        \r\n        _cname: 'Subject',\r\n\r\n        _countObservers: function (type) {\r\n            var result = 0;\r\n            if (!_.isUndefined(this._observers[type])) {\r\n                result = this._observers[type].length;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _setObserverType: function () {\r\n            var types, type, i, l;\r\n            types = _.toArray(arguments);\r\n\r\n            for (i = 0, l = types.length; i < l; i += 1) {\r\n                type = types[i];\r\n                if (_.isUndefined(this._observers[type])) {\r\n                    this._observers[type] = [];\r\n                }\r\n            }\r\n        },\r\n\r\n        _addObserver: function (type, observer) {\r\n            if (_.isUndefined(this._observers[type])) {\r\n                this._observers[type] = [];\r\n            }\r\n            this._observers[type].push(observer);\r\n        },\r\n\r\n        _removeObserver: function (type, observer) {\r\n            var observers, index;\r\n            observers = this._observers[type];\r\n\r\n            if (_.isUndefined(observers)) {\r\n                logger.warn('オブザーバーが登録されていません。');\r\n                return;\r\n            }\r\n\r\n            index = _.indexOf(observers, observer);\r\n            if (index > -1) {\r\n                observers.splice(index, 1);\r\n            }\r\n        },\r\n\r\n        _notify: function (type) {\r\n            var observers, i, l, observer, args;\r\n            observers = this._observers[type];\r\n            args = _.toArray(arguments).slice(1);\r\n\r\n            if (_.isUndefined(observers)) {\r\n                logger.warn('オブザーバーが登録されていません。');\r\n                return;\r\n            }\r\n\r\n            for (i = 0, l = observers.length; i < l; i += 1) {\r\n                observer = observers[i];\r\n                if (_.isFunction(observer._update)) {\r\n                    observer._update.apply(observer, args);\r\n                }\r\n            }\r\n        },\r\n    });\r\n\r\n    Entity = function (name) {\r\n        Subject.call(this);\r\n\r\n        this._id = uuidv4();\r\n        this._name = !isFalsy(name) ? name : this._id;\r\n        this._type = 'entity';\r\n        this._status = 'inactive';\r\n\r\n        this.model = new Model();\r\n        this.props = {};\r\n        this.methods = {};\r\n\r\n        this._setObserverType('root');\r\n    };\r\n\r\n    Entity.prototype = _.create(Subject.prototype, _.extend({\r\n        constructor: Entity,\r\n\r\n        getId: function () {\r\n            return this._id;\r\n        },\r\n\r\n        getName: function () {\r\n            return this._name;\r\n        },\r\n\r\n        setName: function (name) {\r\n            this._name = name;\r\n            return name;\r\n        },\r\n\r\n        isActive: function () {\r\n            return this._status === 'active';\r\n        },\r\n\r\n        addMethod: function (object) {\r\n            var self, bindObject;\r\n\r\n            self = this;\r\n            bindObject = _.mapObject(object, function (method) {\r\n                return _.bind(method, self);\r\n            });\r\n\r\n            _.extend(this.methods, bindObject);\r\n            return this.methods;\r\n        },\r\n        \r\n        _cname: 'Entity',\r\n\r\n        _activate: function () {\r\n            this._status = 'active';\r\n            logger.info(this._cname + 'インスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n        },\r\n\r\n        _inactivate: function () {\r\n            this._status = 'inactive';\r\n            logger.info(this._cname + 'インスタンス\"' + this._name + '\"が非アクティブ化されました。');\r\n        },\r\n\r\n        _update: _.noop,\r\n\r\n    }, mixin.accessor));\r\n\r\n    Elem = function (name) {\r\n        Entity.call(this, name);\r\n\r\n        this._type = 'element';\r\n\r\n        this._container = null;\r\n        this._root = null;\r\n        this._level = 0;\r\n\r\n        this._setObserverType('container');\r\n\r\n        Object.defineProperties(this, mixin.descriptor);\r\n    };\r\n\r\n    Elem.prototype = _.create(Entity.prototype, _.extend({\r\n        constructor: Elem,\r\n\r\n        getContainer: function () {\r\n            return this._container;\r\n        },\r\n\r\n        getCurrentLevel: function () {\r\n            return this._level;\r\n        },\r\n\r\n        _cname: 'Elem',\r\n        \r\n        _async: function (callback) {\r\n            this._notify('root', 'async', _.bind(function () {\r\n                _.bind(callback, this)();\r\n                return Promise.resolve();\r\n            }, this));\r\n        },\r\n    }, mixin.helper));\r\n\r\n    ProtoState = function (name) {\r\n        Elem.call(this, name);\r\n\r\n        this._type = 'state';\r\n        this.region = null;\r\n        this._regions = [];\r\n\r\n        this._setObserverType('regions');\r\n    };\r\n\r\n    ProtoState.prototype = _.create(Elem.prototype, _.extend({\r\n        constructor: ProtoState,\r\n\r\n        getRegion: function (index) {\r\n            if (_.isNumber(index)) {\r\n                return this._regions[index];\r\n\r\n            } else {\r\n                return this.region;\r\n            }\r\n        },\r\n\r\n        completion: function () {\r\n            this._async(function () {\r\n                if (this.isActive()) {\r\n                    this._exit();\r\n\r\n                    if (!_.isNull(this._container)) {\r\n                        this._notify('container', 'completion');\r\n\r\n                    } else {\r\n                        logger.error(this._cname + 'インスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n                    }\r\n                } else {\r\n                    logger.error(this._cname + 'インスタンス\"' + this._name + '\"はすでに非アクティブ化されています。');\r\n                }\r\n            });\r\n        },\r\n        \r\n        _cname: 'ProtoState',\r\n\r\n        _getSuperState: function () {\r\n            var result = null;\r\n            if (!_.isNull(this._container) && !_.isNull(this._container._parent)) {\r\n                result = this._container._parent;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _update: function (event) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'entry':\r\n                    this._entry.apply(this, args);\r\n                    break;\r\n\r\n                case 'exit':\r\n                    this._exit.apply(this, args);\r\n                    break;\r\n\r\n                case 'update-relation':\r\n                    this._updateRelation.apply(this, args);\r\n                    break;\r\n\r\n                case 'completion':\r\n                    this.completion.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _updateRelation: function (currentLevel, root) {\r\n            this._level = currentLevel;\r\n            this._root = root;\r\n\r\n            this._notify('regions', 'update-relation');\r\n        },\r\n\r\n        _entry: function () {\r\n            if (!this.isActive()) {\r\n                this._activate();\r\n                this._notify('regions', 'entry');\r\n            }\r\n        },\r\n\r\n        _exit: function () {\r\n            if (this.isActive()) {\r\n                this._notify('regions', 'exit');\r\n                this._inactivate();\r\n            }\r\n        },\r\n    }, mixin.manipulator.state));\r\n\r\n    State = function (name, options) {\r\n        ProtoState.call(this, name);\r\n\r\n        options = _.defaults(options || {}, _.clone(State.options));\r\n\r\n        if (_.isObject(options.data)) {\r\n            this.extend(options.data);\r\n        }\r\n\r\n        this.save();\r\n\r\n        if (_.isObject(options.props)) {\r\n            _.extend(this.props, options.props);\r\n        }\r\n\r\n        if (_.isObject(options.methods)) {\r\n            this.addMethod(options.methods);\r\n        }\r\n\r\n        this._entryAction = options.entryAction;\r\n        this._exitAction = options.exitAction;\r\n        this._doActivity = options.doActivity;\r\n\r\n        this._autoTransition = options.autoTransition;\r\n\r\n        this._loop = options.loop;\r\n        this._fps = options.fps;\r\n        this._interval = 1000 / this._fps;\r\n\r\n        this._timerId = 0;\r\n        this._lastCallTime = 0;\r\n    };\r\n\r\n    State.options = {\r\n        entryAction: _.noop,\r\n        exitAction: _.noop,\r\n        doActivity: _.noop,\r\n\r\n        autoTransition: false,\r\n        loop: false,\r\n        fps: 60,\r\n    };\r\n\r\n    State.prototype = _.create(ProtoState.prototype, {\r\n        constructor: State,\r\n\r\n        getTicks: function () {\r\n            if (this._loop) {\r\n                return this._ticks;\r\n\r\n            } else {\r\n                logger.error('Stateインスタンスのloopオプションが指定されてません。');\r\n            }\r\n        },\r\n\r\n        getElapsedTime: function () {\r\n            if (this._loop) {\r\n                return this._elapsedTime;\r\n\r\n            } else {\r\n                logger.error('Stateインスタンスのloopオプションが指定されてません。');\r\n            }\r\n        },\r\n\r\n        completion: function () {\r\n            this._async(function () {\r\n                var transit;\r\n\r\n                if (this.isActive()) {\r\n                    if (!_.isNull(this._container)) {\r\n                        transit = _findNextTransition(this._container, this);\r\n                        if (!_.isUndefined(transit)) {\r\n                            transit.trigger();\r\n\r\n                        } else {\r\n                            this._exit();\r\n                            this._notify('container', 'completion');\r\n                        }\r\n                    } else {\r\n                        logger.error(this._cname + 'インスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n                    }\r\n                } else {\r\n                    logger.error(this._cname + 'インスタンス\"' + this._name + '\"はすでに非アクティブ化されています。');\r\n                }\r\n            });\r\n        },\r\n        \r\n        _cname: 'State',\r\n\r\n        _update: function (event) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'entry':\r\n                    this._entry.apply(this, args);\r\n                    break;\r\n\r\n                case 'exit':\r\n                    this._exit.apply(this, args);\r\n                    break;\r\n\r\n                case 'update-relation':\r\n                    this._updateRelation.apply(this, args);\r\n                    break;\r\n\r\n                case 'completion':\r\n                    this.completion.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _setTimer: function (callback) {\r\n            var loop;\r\n            \r\n            this._startTime = 0;\r\n            this._elapsedTime = 0;\r\n            this._ticks = 0;\r\n            this._timerId = 0;\r\n            \r\n            loop = _.bind(function () {\r\n                var timeToCall = this._tick(callback);\r\n                this._timerId = setTimeout(loop, timeToCall);\r\n            }, this);\r\n            \r\n            loop();\r\n        },\r\n\r\n        _clearTimer: function () {\r\n            clearTimeout(this._timerId);\r\n        },\r\n\r\n        _tick: function (callback) {\r\n            var currentTime, deltaTime, processingTime, timeToCall;\r\n\r\n            currentTime = _.now();\r\n            if (this._startTime === 0) {\r\n                this._startTime = currentTime;\r\n                deltaTime = 0;\r\n\r\n            } else {\r\n                deltaTime = currentTime - this._lastTime;\r\n                this._elapsedTime = currentTime - this._startTime;\r\n            }\r\n\r\n            this._lastTime = currentTime;\r\n            this._ticks += 1;\r\n\r\n            callback(deltaTime);\r\n            processingTime = _.now() - currentTime;\r\n            timeToCall = max(this._interval - processingTime, 0);\r\n            return timeToCall;\r\n        },\r\n\r\n        _activate: function () {\r\n            var root, model, props, methods;\r\n\r\n            root = this._root;\r\n            if (!_.isNull(root)) {\r\n                model = root.model;\r\n                props = root.props;\r\n                methods = root.methods;\r\n\r\n            } else {\r\n                logger.error('Machineインスタンスの参照が存在しません。');\r\n            }\r\n\r\n            this._status = 'active';\r\n            logger.info(this._cname + 'インスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            this._entryAction(model, props, methods);\r\n\r\n            if (this._loop) {\r\n                this._setTimer(_.bind(function (deltaTime) {\r\n                    this._doActivity(deltaTime, model, props, methods);\r\n\r\n                    if (this._autoTransition) {\r\n                        this.completion();\r\n                    }\r\n                }, this));\r\n\r\n            } else {\r\n                this._doActivity(model, props, methods);\r\n\r\n                if (this._autoTransition) {\r\n                    this.completion();\r\n                }\r\n            }\r\n        },\r\n\r\n        _inactivate: function () {\r\n            var root, model, props, methods;\r\n\r\n            root = this._root;\r\n            if (!_.isNull(root)) {\r\n                model = root.model;\r\n                props = root.props;\r\n                methods = root.methods;\r\n\r\n            } else {\r\n                logger.error('Machineインスタンスの参照が存在しません。');\r\n            }\r\n\r\n            this._clearTimer();\r\n\r\n            if (!_.isNull(this._container)) {\r\n                this._notify('container', 'set-previous-state', this);\r\n            }\r\n\r\n            this._exitAction(model, props, methods);\r\n\r\n            this._status = 'inactive';\r\n            logger.info(this._cname + 'インスタンス\"' + this._name + '\"が非アクティブ化されました。');\r\n\r\n        },\r\n\r\n        _entry: function (history, priority) {\r\n            if (!this.isActive()) {\r\n                this._activate();\r\n                this._notify('regions', 'entry', history, priority);\r\n            }\r\n        },\r\n\r\n    });\r\n\r\n    Machine = function (name, options) {\r\n        ProtoState.call(this, name, options);\r\n\r\n        options = options || {};\r\n\r\n        if (_.isObject(options.data)) {\r\n            this.extend(options.data);\r\n        }\r\n\r\n        this.save();\r\n\r\n        if (_.isObject(options.props)) {\r\n            _.extend(this.props, options.props);\r\n        }\r\n\r\n        if (_.isObject(options.methods)) {\r\n            this.addMethod(options.methods);\r\n        }\r\n\r\n        this._deployed = false;\r\n        this._promise = null;\r\n\r\n        this.appendRegion();\r\n        this._setObserverType('inbound');\r\n    };\r\n\r\n    Machine.prototype = _.create(ProtoState.prototype, {\r\n        constructor: Machine,\r\n\r\n        deploy: function () {\r\n            this._deployed = true;\r\n\r\n            this._promise = Promise.resolve();\r\n            this._updateRelation(this._level, this);\r\n\r\n            _eachEntity(this, _.bind(function (entity) {\r\n                if (!(entity instanceof Machine)) {\r\n                    entity._addObserver('root', this);\r\n                }\r\n            }, this));\r\n\r\n            return this;\r\n        },\r\n\r\n        undeploy: function () {\r\n            this._deployed = false;\r\n            this._promise = null;\r\n\r\n            _eachEntity(this, _.bind(function (entity) {\r\n                if (!(entity instanceof Machine)) {\r\n                    entity._removeObserver('root', this);\r\n                }\r\n\r\n            }, this));\r\n\r\n            this._updateRelation(this._level, null);\r\n\r\n            return this;\r\n        },\r\n\r\n        start: function (priority) {\r\n            if (!this._deployed) {\r\n                logger.error('start()の前にdeploy()メソッドを実行してください。');\r\n            }\r\n\r\n            if (!this.isActive()) {\r\n                logger.info('Machineインスタンス\"' + this._name + '\"が動作を開始しました。');\r\n\r\n                this._stackPromise(_.bind(function () {\r\n                    this._entry(undefined, priority);\r\n\r\n                    return Promise.resolve();\r\n                }, this));\r\n\r\n            } else {\r\n                logger.warn('Machineインスタンス\"' + this._name + '\"はすでに起動しています。');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        finish: function () {\r\n            if (!this._deployed) {\r\n                logger.error('start()の前にdeploy()メソッドを実行してください。');\r\n            }\r\n\r\n            if (this.isActive()) {\r\n                this.completion();\r\n            } else {\r\n                logger.warn('Machineインスタンス\"' + this._name + '\"はすでに動作を終了しています。');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        completion: function () {\r\n            this._stackPromise(_.bind(function () {\r\n                this._exit();\r\n                logger.info('Machineインスタンス\"' + this._name + '\"が動作を終了しました。');\r\n\r\n                return Promise.resolve();\r\n            }, this));\r\n        },\r\n        \r\n        _cname: 'Machine',\r\n\r\n        _stackPromise: function (callback) {\r\n            this._promise = this._promise.then(callback).catch(this._onRejected);\r\n        },\r\n\r\n        _aborted: function (state) {\r\n            logger.error('Machineインスタンス\"' + this._name + '\"は処理を停止しました。');\r\n        },\r\n\r\n        _outerExecution: function (key) {\r\n            var i, l, region, state;\r\n\r\n            if (!_.isUndefined(key)) {\r\n                for (i = 0, l = this._regions.length; i < l; i += 1) {\r\n                    region = this._regions[i];\r\n                    state = region._states[key];\r\n                    if (!_.isUndefined(state)) {\r\n                        this.start(state);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                logger.error('エンドポイントのEntryPointPseudoStateインスタンスが指定されていません。');\r\n\r\n            } else {\r\n                this.start();\r\n            }\r\n        },\r\n\r\n        _linkBack: function (state) {\r\n            this.completion();\r\n\r\n            this._stackPromise(_.bind(function () {\r\n                this._notify('inbound', 'link-back', state._id);\r\n\r\n                return Promise.resolve();\r\n            }, this));\r\n        },\r\n\r\n        _update: function (event, callback) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'async':\r\n                    this._stackPromise(callback);\r\n                    break;\r\n\r\n                case 'entry':\r\n                    this._entry.apply(this, args);\r\n                    break;\r\n\r\n                case 'exit':\r\n                    this._exit.apply(this, args);\r\n                    break;\r\n\r\n                case 'completion':\r\n                    this.completion.apply(this, args);\r\n                    break;\r\n\r\n                case 'termination':\r\n                    this._aborted.apply(this, args);\r\n                    break;\r\n\r\n                case 'link-forward':\r\n                    this._outerExecution.apply(this, args);\r\n                    break;\r\n\r\n                case 'exit-point':\r\n                    this._linkBack.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _onRejected: function (e) {\r\n            logger.info(e);\r\n            return Promise.reject(e);\r\n        },\r\n\r\n        _entry: function (history, priority) {\r\n            if (!this.isActive()) {\r\n                this._activate();\r\n                this._notify('regions', 'entry', history, priority);\r\n            }\r\n        },\r\n    });\r\n\r\n    FinalState = function (name) {\r\n        ProtoState.call(this, name);\r\n    };\r\n\r\n    FinalState.prototype = _.create(ProtoState.prototype, _.extend({\r\n        constructor: FinalState,\r\n        \r\n        _cname: 'FinalState',\r\n\r\n        _activate: function () {\r\n            this._status = 'active';\r\n            logger.info('FinalStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            this.completion();\r\n        },\r\n\r\n        _inactivate: function () {\r\n            this._status = 'inactive';\r\n\r\n            if (!_.isNull(this._container)) {\r\n                this._notify('container', 'set-previous-state', null);\r\n            }\r\n\r\n            logger.info('FinalStateインスタンス\"' + this._name + '\"が非アクティブ化されました。');\r\n        },\r\n    }, mixin.disable));\r\n\r\n    SubMachine = function (name) {\r\n        ProtoState.call(this, name);\r\n\r\n        this._link = null;\r\n        this._deployed = false;\r\n\r\n        this.appendRegion();\r\n        this._setObserverType('outbound');\r\n    };\r\n\r\n    SubMachine.prototype = _.create(ProtoState.prototype, _.extend({\r\n        constructor: SubMachine,\r\n\r\n        deploy: function () {\r\n            this._deployed = true;\r\n\r\n            _eachEntity(this, _.bind(function (entity) {\r\n                if (entity instanceof ProtoState) {\r\n                    if (entity instanceof PseudoState) {\r\n                        if (entity instanceof ConnectionPointPseudoState) {\r\n                            entity._addObserver('sub-root', this);\r\n\r\n                            if (entity._getSuperState() === this) {\r\n                                entity._isMediator = true;\r\n\r\n                            } else {\r\n                                logger.error('ConnectionPointPseudoStateインスタンスはサブマシン直下のサブ状態でなければなりません。');\r\n                            }\r\n                        } else if (!(entity instanceof InitialPseudoState)) {\r\n                            logger.error('SubMachineインスタンスはConnectionPointPseudoStateクラス以外の状態を追加できません。');\r\n                        }\r\n                    } else if (!(entity instanceof SubMachine) && !(entity instanceof FinalState)) {\r\n                        logger.error('SubMachineインスタンスはConnectionPointPseudoStateクラス以外の状態を保持できません。');\r\n                    }\r\n                }\r\n            }, this));\r\n\r\n            return this;\r\n        },\r\n\r\n        undeploy: function () {\r\n            this._deployed = false;\r\n\r\n            _eachEntity(this, _.bind(function (entity) {\r\n                if (entity instanceof ProtoState) {\r\n                    if (entity instanceof PseudoState) {\r\n                        if (entity instanceof ConnectionPointPseudoState) {\r\n                            entity._removeObserver('sub-root', this);\r\n                            entity._isMediator = false;\r\n\r\n                        } else if (!(entity instanceof InitialPseudoState)) {\r\n                            logger.error('SubMachineインスタンスはConnectionPointPseudoStateクラス以外の状態を追加できません。');\r\n                        }\r\n                    } else if (!(entity instanceof SubMachine) && !(entity instanceof FinalState)) {\r\n                        logger.error('SubMachineインスタンスはConnectionPointPseudoStateクラス以外の状態を保持できません。');\r\n                    }\r\n                }\r\n            }, this));\r\n\r\n            return this;\r\n        },\r\n        \r\n        _cname: 'SubMachine',\r\n\r\n        _linkForward: function (state) {\r\n            this._async(_.bind(function () {\r\n                state._exit();\r\n\r\n                if (!_.isEmpty(state._key)) {\r\n                    this._notify('outbound', 'link-forward', state._key);\r\n\r\n                } else {\r\n                    logger.error('リンク先のマシンに渡すキーが指定されていません。');\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        _innerExecution: function (id) {\r\n            var exitPoint, i, l, region;\r\n\r\n            for (i = 0, l = this._regions.length; i < l; i += 1) {\r\n                region = this._regions[i];\r\n\r\n                exitPoint = _.findWhere(region._states, {_key: id});\r\n\r\n                if (!_.isUndefined(exitPoint)) {\r\n                    exitPoint._entry();\r\n\r\n                } else {\r\n                    logger.error('エンドポイントのExitPointPseudoStateインスタンスが指定されていません。');\r\n                }\r\n            }\r\n        },\r\n\r\n        _update: function (event) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'entry-point':\r\n                    this._linkForward.apply(this, args);\r\n                    break;\r\n\r\n                case 'link-back':\r\n                    this._innerExecution.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _entry: function (history, priority) {\r\n            if (!this._deployed) {\r\n                logger.error('SubMachineインスタンスのdeploy()メソッドを実行してください。');\r\n            }\r\n\r\n            if (!this.isActive()) {\r\n                this._activate();\r\n                this._notify('regions', 'entry', history, priority);\r\n            }\r\n        },\r\n\r\n        _exit: function () {\r\n            if (!this._deployed) {\r\n                logger.error('SubMachineインスタンスのdeploy()メソッドを実行してください。');\r\n            }\r\n\r\n            if (this.isActive()) {\r\n                this._notify('regions', 'exit');\r\n                this._inactivate();\r\n            }\r\n        },\r\n    }, mixin.manipulator.subMachine));\r\n\r\n\r\n    PseudoState = function (name) {\r\n        ProtoState.call(this, name);\r\n\r\n        this._type = 'pseudo-state';\r\n    };\r\n\r\n    PseudoState.prototype = _.create(ProtoState.prototype, _.extend({\r\n        constructor: PseudoState,\r\n\r\n        _cname: 'PseudoState',\r\n        \r\n        _inactivate: function () {\r\n            this._status = 'inactive';\r\n\r\n            if (!_.isNull(this._container)) {\r\n                this._notify('container', 'set-previous-state', null);\r\n            }\r\n\r\n            logger.info(this._cname + 'インスタンス\"' + this._name + '\"が非アクティブ化されました。');\r\n        },\r\n    }, mixin.disable));\r\n\r\n    InitialPseudoState = function (name) {\r\n        PseudoState.call(this, name);\r\n    };\r\n\r\n    InitialPseudoState.prototype = _.create(PseudoState.prototype, {\r\n        constructor: InitialPseudoState,\r\n\r\n        _cname: 'InitialPseudoState',\r\n        \r\n        _activate: function () {\r\n            var transit;\r\n\r\n            this._status = 'active';\r\n            logger.info('InitialPseudoStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            if (!_.isNull(this._container)) {\r\n                transit = _findFirstTransition(this._container);\r\n                if (!_.isUndefined(transit)) {\r\n                    transit.trigger();\r\n\r\n                } else {\r\n                    logger.error('Regionインスタンス\"' + this._container._name + '\"の初期遷移が見つかりません。');\r\n                }\r\n            } else {\r\n                logger.error('InitialPseudoStateインスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n            }\r\n        },\r\n    });\r\n\r\n    HistoryPseudoState = function (name, deep) {\r\n        PseudoState.call(this, name);\r\n\r\n        this._isDeep = !_.isUndefined(deep) ? deep : false;\r\n    };\r\n\r\n    HistoryPseudoState.prototype = _.create(PseudoState.prototype, {\r\n        constructor: HistoryPseudoState,\r\n        \r\n        _cname: 'HistoryPseudoState',\r\n    });\r\n\r\n    TerminatePseudoState = function (name) {\r\n        PseudoState.call(this, name);\r\n    };\r\n\r\n    TerminatePseudoState.prototype = _.create(PseudoState.prototype, {\r\n        constructor: TerminatePseudoState,\r\n\r\n        _cname: 'TerminatePseudoState',\r\n        \r\n        _activate: function () {\r\n            this._status = 'active';\r\n            logger.info('TerminatePseudoStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            this._notify('root', 'termination', this);\r\n            throw new Error('ERROR: 停止状態に遷移しました。処理を中断します。');\r\n        },\r\n    });\r\n\r\n    ChoicePseudoState = function (name, condition) {\r\n        PseudoState.call(this, name);\r\n\r\n        this._condition = _.isFunction(condition) ? condition : _.noop;\r\n    };\r\n\r\n    ChoicePseudoState.prototype = _.create(PseudoState.prototype, {\r\n        constructor: ChoicePseudoState,\r\n\r\n        _cname: 'ChoicePseudoState',\r\n        \r\n        _activate: function () {\r\n            var root, model, props, methods, target, transit;\r\n\r\n            root = this._root;\r\n            if (!_.isNull(root)) {\r\n                model = root.model;\r\n                props = root.props;\r\n                methods = root.methods;\r\n\r\n            } else {\r\n                logger.error('Machineインスタンスの参照が存在しません。');\r\n            }\r\n\r\n            this._status = 'active';\r\n            logger.info('ChoicePseudoStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            target = this._condition(model, props, methods);\r\n            if (!(target instanceof ProtoState)) {\r\n                logger.error('遷移先のStateインスタンスが存在しません。');\r\n            }\r\n\r\n            if (!_.isNull(this._container)) {\r\n                transit = _findNextTransition(this._container, this, target);\r\n                if (!_.isUndefined(transit)) {\r\n                    transit.trigger();\r\n\r\n                } else {\r\n                    logger.error('ChoicePseudoStateインスタンス\"' + this._name + '\"起点のTransitionインスタンスが見つかりません。');\r\n                }\r\n            } else {\r\n                logger.error('ChoicePseudoStateインスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n            }\r\n        },\r\n    });\r\n\r\n    ConnectionPointPseudoState = function (name) {\r\n        PseudoState.call(this, name);\r\n\r\n        this._key = '';\r\n        this._isMediator = false;\r\n        this._setObserverType('sub-root');\r\n    };\r\n\r\n    ConnectionPointPseudoState.prototype = _.create(PseudoState.prototype, {\r\n        constructor: ConnectionPointPseudoState,\r\n\r\n        setKey: function (key) {\r\n            this._key = key;\r\n            return key;\r\n        },\r\n        \r\n        _cname: 'ConnectionPointPseudoState',\r\n    });\r\n\r\n    EntryPointPseudoState = function (name) {\r\n        ConnectionPointPseudoState.call(this, name);\r\n    };\r\n\r\n    EntryPointPseudoState.prototype = _.create(ConnectionPointPseudoState.prototype, {\r\n        constructor: EntryPointPseudoState,\r\n\r\n        _cname: 'EntryPointPseudoState',\r\n        \r\n        _activate: function () {\r\n            var transit;\r\n\r\n            this._status = 'active';\r\n            logger.info('EntryPointPseudoStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            if (this._isMediator) {\r\n                this._notify('sub-root', 'entry-point', this);\r\n\r\n            } else {\r\n                if (!_.isNull(this._container)) {\r\n                    transit = _findFirstTransition(this._container, this);\r\n                    if (!_.isUndefined(transit)) {\r\n                        transit.trigger();\r\n\r\n                    } else {\r\n                        logger.error('Regionインスタンス\"' + this._container._name + '\"の初期遷移が見つかりません。');\r\n                    }\r\n                } else {\r\n                    logger.error('EntryPointPseudoStateインスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n                }\r\n            }\r\n        },\r\n    });\r\n\r\n    ExitPointPseudoState = function (name) {\r\n        ConnectionPointPseudoState.call(this, name);\r\n    };\r\n\r\n    ExitPointPseudoState.prototype = _.create(ConnectionPointPseudoState.prototype, {\r\n        constructor: ExitPointPseudoState,\r\n\r\n        _cname: 'ExitPointPseudoState',\r\n        \r\n        _activate: function () {\r\n            var upperContainer, transit;\r\n\r\n            this._status = 'active';\r\n            logger.info('ExitPointPseudoStateインスタンス\"' + this._name + '\"がアクティブ化されました。');\r\n\r\n            if (!this._isMediator) {\r\n                this._notify('root', 'exit-point', this);\r\n\r\n            } else {\r\n                upperContainer = this._container._getUpperContainer();\r\n                if (!_.isNull(upperContainer)) {\r\n                    transit = _findNextTransition(upperContainer, this);\r\n\r\n                    if (!_.isUndefined(transit)) {\r\n                        transit.trigger();\r\n\r\n                    } else {\r\n                        logger.error('ExitPointPseudoStateインスタンス\"' + this._name + '\"起点のTransitionインスタンスが見つかりません。');\r\n                    }\r\n                } else {\r\n                    logger.error('ExitPointPseudoStateインスタンス\"' + this._name + '\"の上位コンテナが存在しません。');\r\n                }\r\n            }\r\n        },\r\n    });\r\n\r\n    Transition = function (name, source, target, options) {\r\n        Elem.call(this, name);\r\n\r\n        this._type = 'transition';\r\n\r\n        if (source instanceof ProtoState || isFalsy(source) || InitialPseudoState) {\r\n            this._rawSource = source;\r\n\r\n        } else {\r\n            logger.error('第2引数に遷移元のStateインスタンス、またはfalseを指定してください。');\r\n        }\r\n\r\n        if (target instanceof ProtoState || isFalsy(target) || FinalState) {\r\n            this._rawTarget = target;\r\n\r\n        } else {\r\n            logger.error('第3引数に遷移元のStateインスタンス、またはfalseを指定してください。');\r\n        }\r\n\r\n        options = _.defaults(options || {}, _.clone(Transition.options));\r\n\r\n        if (_.isObject(options.data)) {\r\n            this.extend(options.data);\r\n        }\r\n\r\n        this.save();\r\n\r\n        if (_.isObject(options.props)) {\r\n            _.extend(this.props, options.props);\r\n        }\r\n\r\n        if (_.isObject(options.methods)) {\r\n            this.addMethod(options.methods);\r\n        }\r\n\r\n        this._source = null;\r\n        this._target = null;\r\n\r\n        this._guard = options.guard;\r\n        this._effect = options.effect;\r\n        this._internal = options.internal;\r\n\r\n        this._locked = options.locked;\r\n\r\n        this._isExplicitEntry = false;\r\n        this._exitViaExitPoint = false;\r\n    };\r\n\r\n    Transition.options = {\r\n        guard: null,\r\n        effect: null,\r\n        internal: false,\r\n\r\n        locked: true,\r\n    };\r\n\r\n    Transition.prototype = _.create(Elem.prototype, {\r\n        constructor: Transition,\r\n\r\n        trigger: function () {\r\n            var root, model, props, methods;\r\n\r\n            root = this._root;\r\n            if (!_.isNull(root)) {\r\n                model = root.model;\r\n                props = root.props;\r\n                methods = root.methods;\r\n\r\n            } else {\r\n                logger.error('Machineインスタンスの参照が存在しません。');\r\n            }\r\n\r\n            if (_.isNull(this._container)) {\r\n                logger.error('Transitionインスタンス\"' + this._name + '\"のコンテナが存在しません。');\r\n            }\r\n\r\n            if (!this._container.isActive()) {\r\n                logger.error('Transitionインスタンス\"' + this._name + '\"のコンテナが非アクティブです。');\r\n            }\r\n\r\n            /* 遷移元が終了状態であったり、遷移先の状態が開始擬似状態である場合、エラー出力 */\r\n            if (this._source instanceof FinalState) {\r\n                logger.error('終了状態を遷移元にすることはできません。');\r\n\r\n            } else if (this._source instanceof TerminatePseudoState) {\r\n                logger.error('停止状態を遷移元にすることはできません。');\r\n\r\n            } else if (this._target instanceof InitialPseudoState) {\r\n                logger.error('開始擬似状態を遷移先にすることはできません。');\r\n            }\r\n\r\n            /* ガードが設定されていたら、ガード判定する */\r\n            if (!_.isNull(this._guard)) {\r\n                if (!this._guard(model, props, methods)) {\r\n                    logger.info('ガードが成立しませんでした。遷移は発生しません。');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this._internal) {\r\n                if (this._source === this._target) {\r\n                    this._async(function () {\r\n                        logger.info('内部遷移を実行します。');\r\n\r\n                            if (!_.isNull(this._effect)) {\r\n                            this._effect(model, props, methods);\r\n                        }\r\n                    });\r\n\r\n                    return;\r\n                } else {\r\n                    logger.error('遷移元と遷移先は同じStateインスタンスを指定してください。');\r\n                }\r\n            }\r\n\r\n            this._async(function () {\r\n                var superState;\r\n\r\n                if (!this.isActive()) {\r\n                    this._activate();\r\n\r\n                } else {\r\n                    logger.error('Transitionインスタンス\"' + this._name + '\"はすでにアクティブ化されています。');\r\n                }\r\n\r\n                if (this._source.isActive()) {\r\n                    if (this._exitViaExitPoint) {\r\n                        superState = this._source._getSuperState();\r\n                        if (!_.isNull(superState)) {\r\n                            superState._exit();\r\n\r\n                        } else {\r\n                            logger.error(this._target._cname + 'インスタンス\"' + this._target._name + '\"の「親」状態が存在しません。');\r\n                        }\r\n                    } else {\r\n                        this._source._exit();\r\n                    }\r\n                } else {\r\n                    logger.error('遷移元' + this._target._cname + 'インスタンス\"' + this._target._name + '\"が非アクティブです。');\r\n                }\r\n\r\n                if (!_.isNull(this._effect)) {\r\n                    this._effect(model, props, methods);\r\n                }\r\n\r\n                if (!this._target.isActive()) {\r\n                    if (this._isExplicitEntry) {\r\n                        superState = this._target._getSuperState();\r\n                        if (!_.isNull(superState)) {\r\n                            superState._entry(undefined, this._target);\r\n\r\n                        } else {\r\n                            logger.error(this._target._cname + 'インスタンス\"' + this._target._name + '\"の「親」状態が存在しません。');\r\n                        }\r\n                    } else {\r\n                        this._target._entry();\r\n                    }\r\n                } else {\r\n                    logger.error('遷移先' + this._target._cname + 'インスタンス\"' + this._target._name + '\"がアクティブです。');\r\n                }\r\n\r\n                if (this.isActive()) {\r\n                    this._inactivate();\r\n\r\n                } else {\r\n                    logger.error('Transitionインスタンス\"' + this._name + '\"はすでに非アクティブ化されています。');\r\n                }\r\n            });\r\n        },\r\n        \r\n        _cname: 'Transition',\r\n\r\n        _update: function (event) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'update-relation':\r\n                    this._updateRelation.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _updateRelation: function (currentLevel, root) {\r\n            this._level = currentLevel;\r\n            this._root = root;\r\n        },\r\n    });\r\n\r\n    Region = function (name, options) {\r\n        Entity.call(this, name);\r\n\r\n        this._type = 'region';\r\n\r\n        options = options || {};\r\n\r\n        if (_.isObject(options.data)) {\r\n            this.extend(options.data);\r\n        }\r\n\r\n        this.save();\r\n\r\n        if (_.isObject(options.props)) {\r\n            _.extend(this.props, options.props);\r\n        }\r\n\r\n        if (_.isObject(options.methods)) {\r\n            this.addMethod(options.methods);\r\n        }\r\n\r\n        this._parent = null;\r\n\r\n        this._initialPseudo = null;\r\n        this._final = null;\r\n        this._historyPseudo = null;\r\n        this._previousState = null;\r\n\r\n        this._states = [];\r\n        this._transits = [];\r\n\r\n        this._setObserverType('parent', 'states', 'transits');\r\n        this._setDefaultStates();\r\n    };\r\n\r\n    Region.prototype = _.create(Entity.prototype, _.extend({\r\n        constructor: Region,\r\n\r\n        hasHistory: function (deep) {\r\n            return isFalsy(deep) ? !_.isNull(this._historyPseudo) :\r\n                !_.isNull(this._historyPseudo) && this._historyPseudo._isDeep;\r\n        },\r\n\r\n        getIndex: function () {\r\n            var result = -1;\r\n\r\n            if (!_.isNull(this._parent)) {\r\n                result = _.indexOf(this._parent._regions, this);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _cname: 'Region',\r\n        \r\n        _update: function (event) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            switch (event) {\r\n                case 'entry':\r\n                    this._entry.apply(this, args);\r\n                    break;\r\n\r\n                case 'exit':\r\n                    this._exit.apply(this, args);\r\n                    break;\r\n\r\n                case 'update-relation':\r\n                    this._updateRelation.apply(this, args);\r\n                    break;\r\n\r\n                case 'completion':\r\n                    this._completion.apply(this, args);\r\n                    break;\r\n\r\n                case 'set-previous-state':\r\n                    this._setPreviousState.apply(this, args);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _getParentLevel: function () {\r\n            var result = -1;\r\n            if (!_.isNull(this._parent)) {\r\n                result = this._parent._level;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _getRoot: function () {\r\n            var result = null;\r\n            if (!_.isNull(this._parent)) {\r\n                return this._parent._root;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _getUpperContainer: function () {\r\n            var result = null;\r\n            if (!_.isNull(this._parent) && !_.isNull(this._parent._container)) {\r\n                result = this._parent._container;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _setDefaultStates: function () {\r\n            var initialPseudo, final;\r\n            initialPseudo = new InitialPseudoState(false);\r\n            final = new FinalState(false);\r\n\r\n            this.addState(initialPseudo, final);\r\n        },\r\n\r\n        _setDefaultStateName: function () {\r\n            this._initialPseudo._name = 'initial-pseudo-state-in-' + this._name;\r\n            this._final._name = 'final-state-in-' + this._name;\r\n        },\r\n\r\n        _updateRelation: function () {\r\n            var currentLevel, root;\r\n\r\n            this._setDefaultStateName();\r\n\r\n            currentLevel = this._getParentLevel() + 1;\r\n            root = this._getRoot();\r\n\r\n            this._notify('states', 'update-relation', currentLevel, root);\r\n            this._notify('transits', 'update-relation', currentLevel, root);\r\n        },\r\n\r\n        _setPreviousState: function (state) {\r\n            this._previousState = state;\r\n            return state;\r\n        },\r\n\r\n        _entry: function (history, priority) {\r\n            var state;\r\n\r\n            if (!this.isActive()) {\r\n                this._activate();\r\n\r\n                if (_.isUndefined(history)) {\r\n                    history = _findDeepHistoryPseudoState(this);\r\n                    history = !_.isUndefined(history);\r\n                }\r\n\r\n                if (_.indexOf(this._states, priority) > -1) {\r\n                    priority._update('entry', history);\r\n\r\n                } else {\r\n                    if (history) {\r\n                        state = this._previousState || this._initialPseudo;\r\n\r\n                    } else if (!_.isNull(this._historyPseudo)) {\r\n                        state = this._previousState || this._initialPseudo;\r\n\r\n                        if (this._historyPseudo._isDeep) {\r\n                            history = true;\r\n                        }\r\n                    } else {\r\n                        state = this._initialPseudo;\r\n                    }\r\n\r\n                    state._update('entry', history, priority);\r\n                }\r\n            }\r\n        },\r\n\r\n        _exit: function () {\r\n            if (this.isActive()) {\r\n                this._notify('states', 'exit');\r\n                this._inactivate();\r\n            }\r\n        },\r\n\r\n        _completion: function () {\r\n            this._inactivate();\r\n\r\n            if (!_.isNull(this._parent)) {\r\n                if (_.every(this._parent._regions, function (region) {\r\n                    return !region.isActive();\r\n                })) {\r\n                    this._notify('parent', 'completion');\r\n                }\r\n            } else {\r\n                logger.error('Regionインスタンス\"' + this._name + '\"の「親」状態が存在しません。');\r\n            }\r\n\r\n        },\r\n    }, mixin.manipulator.region));\r\n\r\n    function _eachEntity(state, callback) {\r\n        var i, j, l, m, region, subState, transit;\r\n\r\n        callback(state);\r\n\r\n        for (i = 0, l = state._regions.length; i < l; i += 1) {\r\n            region = state._regions[i];\r\n            callback(region);\r\n\r\n            for (j = 0, m = region._transits.length; j < m; j += 1) {\r\n                transit = region._transits[j];\r\n                callback(transit);\r\n            }\r\n\r\n            for (j = 0, m = region._states.length; j < m; j += 1) {\r\n                subState = region._states[j];\r\n                _eachEntity(subState, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    function _findState(region, targetState, sublevel) {\r\n        var i, j, l, m, state, subRegion, result;\r\n\r\n        sublevel = !_.isUndefined(sublevel) ? sublevel : Infinity;\r\n\r\n        if (sublevel >= 0) {\r\n            sublevel -= 1;\r\n\r\n            for (i = 0, l = region._states.length; i < l; i += 1) {\r\n                state = region._states[i];\r\n\r\n                if (state === targetState) {\r\n                    return state;\r\n                }\r\n\r\n                for (j = 0, m = state._regions.length; j < m; j += 1) {\r\n                    subRegion = state._regions[j];\r\n                    result = _findState(subRegion, targetState, sublevel);\r\n                    if (!_.isUndefined(result)) {\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function _findDeepHistoryPseudoState(region) {\r\n        var container;\r\n\r\n        if (region.hasHistory(true)) {\r\n            return region._historyPseudo;\r\n        }\r\n\r\n        container = region._getUpperContainer();\r\n        if (!_.isNull(container)) {\r\n            return _findDeepHistoryPseudoState(container);\r\n        }\r\n    }\r\n\r\n    function _findFirstTransition(region, from) {\r\n        var transits = region._transits;\r\n        if (_.isUndefined(from)) {\r\n            from = region._initialPseudo;\r\n\r\n        } else if (from instanceof EntryPointPseudoState) {\r\n\r\n        }\r\n\r\n        return _.find(transits, function (transit) {\r\n            return transit._source === from;\r\n        });\r\n    }\r\n\r\n    function _findNextTransition(region, from, to) {\r\n        var transits = region._transits;\r\n        \r\n        return _.find(transits, function (transit) {\r\n            if (!_.isUndefined(to)) {\r\n                return transit._source === from && transit._target === to;\r\n\r\n            } else if (from instanceof ExitPointPseudoState) {\r\n                return transit._source === from;\r\n                \r\n            } else {\r\n                return transit._source === from && !transit._locked;\r\n            }\r\n        });\r\n    }\r\n\r\n    FSM = _.extend(FSM, {\r\n        Machine: Machine,\r\n        State: State,\r\n        Transition: Transition,\r\n        Region: Region,\r\n\r\n        InitialPseudoState: InitialPseudoState,\r\n        FinalState: FinalState,\r\n        SubMachine: SubMachine,\r\n        HistoryPseudoState: HistoryPseudoState,\r\n        TerminatePseudoState: TerminatePseudoState,\r\n        ChoicePseudoState: ChoicePseudoState,\r\n\r\n        EntryPointPseudoState: EntryPointPseudoState,\r\n        ExitPointPseudoState: ExitPointPseudoState,\r\n    });\r\n\r\n    return FSM;\r\n}));"]}